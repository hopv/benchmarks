options: "-v run -o runs/ml_<today> -t 100s"

validators {
  success: 0, safe, Safe
  success: 10, unsafe, Unsafe
}

FpHoice Inactive {
  short: fphoice
  cmd: "fphoice --no-vc-reduction --no-effect-analysis"
  validator: ```
if [ `cat $out | grep -e "^unsat$" | wc -l | tr -d ' '` -ne 0 ] ; then
  exit $unsafe
elif [ `cat $out | grep -e "^sat$" | wc -l | tr -d ' '` -ne 0 ] ; then
  exit $safe
else
  exit 2
fi
  ```
}

FpHoice Red and EA {
  short: fphoice_red_ea
  cmd: "fphoice"
  validator: ```
if [ `cat $out | grep -e "^unsat$" | wc -l | tr -d ' '` -ne 0 ] ; then
  exit $unsafe
elif [ `cat $out | grep -e "^sat$" | wc -l | tr -d ' '` -ne 0 ] ; then
  exit $safe
else
  exit 2
fi
  ```
}

FpHoice EA {
  short: fphoice_effect_analysis
  cmd: "fphoice --no-vc-reduction"
  validator: ```
if [ `cat $out | grep -e "^unsat$" | wc -l | tr -d ' '` -ne 0 ] ; then
  exit $unsafe
elif [ `cat $out | grep -e "^sat$" | wc -l | tr -d ' '` -ne 0 ] ; then
  exit $safe
else
  exit 2
fi
  ```
}

MoCHi {
  short: mochi
  cmd: "mochi -horsat2 -only-result"
  validator: ```
if [ `cat $out | grep -e "Safe\!" | wc -l | tr -d ' '` -ne 0 ] ; then
  exit $safe
elif [ `cat $out | grep -e "Unsafe" | wc -l | tr -d ' '` -ne 0 ] ; then
  exit $unsafe
else
  exit 2
fi
  ```
}
