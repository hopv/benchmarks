(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/dotprod_lin.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_29[193:0]| ( Int) Bool)
(declare-fun |dotprod[132:1][186:0]| ( Int  Int) Bool)
(declare-fun |dotprod[177:1][180:0]| ( Int  Int) Bool)
(declare-fun |dotprod[177:4]| ( Int  Int  Int) Bool)
(declare-fun |dotprod[132:2][156:1][171:0]| ( Int  Int  Int) Bool)
(declare-fun |dotprod[132:2][156:0]| ( Int  Int) Bool)
(declare-fun |dotprod[132:1][135:1][150:0]| ( Int  Int  Int) Bool)
(declare-fun |dotprod[132:1][135:0]| ( Int  Int) Bool)
(declare-fun |dotprod[132:4]| ( Int  Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_29[193:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|dotprod[132:1][186:0]| x2 x1) (or (>= 0 (+ 1 x1)) (>= x1 x2))) (|fail_29[193:0]| x0))))
(assert (forall ((x1 Int)(x3 Int)(x0 Int)(var258 Int)(x2 Int)(var259 Int)) (=> (and (|dotprod[177:1][180:0]| x1 x3) (and (|dotprod[132:1][135:1][150:0]| x1 x0 var258) (and (|dotprod[132:4]| x1 x0 x2) (and (|dotprod[132:2][156:1][171:0]| x1 x0 var259) (<= (+ 1 x0) x1))))) (|dotprod[132:1][186:0]| x1 x3))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|dotprod[177:4]| x0 x1 x2) (<= (+ 1 x1) x0)) (|dotprod[177:1][180:0]| x0 x1))))
(assert (forall ((x3 Int)(x0 Int)(x1 Int)(x2 Int)(x4 Int)(x5 Int)(x6 Int)) (=> (and (|dotprod[132:1][135:1][150:0]| x3 x2 x5) (and (|dotprod[132:4]| x3 x2 x4) (and (|dotprod[132:2][156:1][171:0]| x3 x2 x6) (and (= x0 (+ 1 x2)) (and (= x1 (+ x4 (+ x5 x6))) (<= (+ 1 x2) x3)))))) (|dotprod[177:4]| x3 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)) (=> (and (|dotprod[132:2][156:0]| x1 x2) (and (= x3 0) (and (<= 0 x2) (<= (+ 1 x2) x1)))) (|dotprod[132:2][156:1][171:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x3 Int)(x2 Int)(var260 Int)) (=> (and (|dotprod[132:4]| x1 x3 x2) (and (|dotprod[132:1][135:1][150:0]| x1 x3 var260) (<= (+ 1 x3) x1))) (|dotprod[132:2][156:0]| x1 x3))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)) (=> (and (|dotprod[132:1][135:0]| x1 x2) (and (= x3 0) (and (<= 0 x2) (<= (+ 1 x2) x1)))) (|dotprod[132:1][135:1][150:0]| x1 x2 x3))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|dotprod[132:4]| x0 x1 x2) (<= (+ 1 x1) x0)) (|dotprod[132:1][135:0]| x0 x1))))
(assert (forall ((x1 Int)(x3 Int)(x0 Int)) (=> (and (= x3 0) (= x3 x0)) (|dotprod[132:4]| x1 x3 x0))))
(check-sat)
(get-model)
(exit)
