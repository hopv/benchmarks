(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/queen.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_47[544:0]| ( Int) Bool)
(declare-fun |aux1[479:1][482:1][537:0]| ( Int  Int  Int) Bool)
(declare-fun |aux1[416:1][492:1][527:0]| ( Int  Int  Int) Bool)
(declare-fun |assign[354:4][380:0][504:1][515:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[354:4][380:0][504:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |aux1[416:1][492:0]| ( Int  Int) Bool)
(declare-fun |aux1[479:1][482:0]| ( Int  Int) Bool)
(declare-fun |aux1[479:2]| ( Int  Int) Bool)
(declare-fun |dotsPrint[472:2][475:0]| ( Int  Int  Int) Bool)
(declare-fun |dotsPrint[472:1]| ( Int  Int) Bool)
(declare-fun |dotsPrint[465:2][468:0]| ( Int  Int  Int) Bool)
(declare-fun |dotsPrint[465:1]| ( Int  Int) Bool)
(declare-fun |aux1[416:1][419:1][454:0]| ( Int  Int  Int) Bool)
(declare-fun |assign[354:4][380:0][431:1][442:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[354:4][380:0][431:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |aux1[416:1][419:0]| ( Int  Int) Bool)
(declare-fun |aux1[416:2]| ( Int  Int) Bool)
(declare-fun |aux2[403:7][406:0]| ( Int  Int  Int  Int  Int  Int  Bool) Bool)
(declare-fun |aux2[403:6]| ( Int  Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[354:4][380:0][386:1][397:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[354:3][356:1][374:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[354:4][380:0][386:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |loop[339:2][362:1][368:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |loop[339:2][362:0]| ( Int  Int  Int) Bool)
(declare-fun |assign[354:3][356:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |assign[354:2]| ( Int  Int  Int) Bool)
(declare-fun |loop[339:2][341:1][347:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |loop[339:2][341:0]| ( Int  Int  Int) Bool)
(declare-fun |loop[339:1]| ( Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_47[544:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x3 Int)(x1 Int)) (=> (and (|aux1[479:2]| x3 x2) (and (|aux1[479:1][482:1][537:0]| x3 x2 x1) (or (>= x2 (+ 1 x3)) (and (not (= x2 x3)) (>= 0 (+ 1 x2)))))) (|fail_47[544:0]| x0))))
(assert (forall ((x3 Int)(x6 Int)(x7 Int)(var529 Int)(x1 Int)(var530 Int)(var531 Int)(x2 Int)(x0 Int)(x4 Int)) (=> (and (|aux1[416:1][492:1][527:0]| x3 x6 x7) (and (|dotsPrint[472:2][475:0]| x3 var529 x0) (and (|aux1[416:1][419:1][454:0]| x3 x2 x1) (and (|dotsPrint[465:2][468:0]| x3 var530 x4) (and (|dotsPrint[465:2][468:0]| x3 var531 x4) (and (|aux1[416:2]| x3 x2) (and (= (+ var529 x1) x3) (and (= (+ 1 var530) x1) (and (= (+ 1 var531) x1) (and (<= (+ 1 x2) x3) (<= 0 x2))))))))))) (|aux1[479:1][482:1][537:0]| x3 x6 x7))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(var538 Int)(var537 Int)(var539 Int)(var536 Int)) (=> (and (|aux2[403:7][406:0]| var537 var536 var538 x0 var539 0 true) (and (|assign[354:4][380:0][386:1][397:0]| x0 var538 var537 var538 var536) (and (|assign[354:4][380:0][504:1][515:0]| x0 var538 var537 x1 x2) (and (|loop[339:1]| x0 var538) (and (|loop[339:2][341:1][347:0]| x0 var538 var538 var539) (and (= (+ 1 var538) x0) (and (= var537 (+ 1 var539)) (<= var537 x0)))))))) (|aux1[416:1][492:1][527:0]| x0 x1 x2))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(x3 Int)(x4 Int)(var540 Int)) (=> (and (|assign[354:3][356:1][374:0]| x2 x0 x1 x0 var540) (and (|assign[354:2]| x2 x0 x1) (and (|assign[354:4][380:0][504:0]| x2 x0 x1 x3) (and (= x4 x1) (= x0 x3))))) (|assign[354:4][380:0][504:1][515:0]| x2 x0 x1 x3 x4))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)(var541 Int)) (=> (and (|assign[354:2]| x2 x3 x4) (and (|aux2[403:7][406:0]| x4 var541 x3 x2 x0 0 true) (and (|assign[354:4][380:0][386:1][397:0]| x2 x3 x4 x3 var541) (and (|loop[339:1]| x2 x3) (and (|loop[339:2][341:1][347:0]| x2 x3 x3 x0) (and (|aux1[416:1][492:0]| x2 x1) (and (<= x4 x2) (and (= x4 (+ 1 x0)) (= (+ 1 x3) x2))))))))) (|assign[354:4][380:0][504:0]| x2 x3 x4 x1))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)(var542 Int)(var546 Int)(var544 Int)(var543 Int)(var545 Int)) (=> (and (|dotsPrint[472:2][475:0]| x1 var542 var543) (and (|dotsPrint[465:2][468:0]| x1 var544 var545) (and (|aux1[479:1][482:0]| x1 x2) (and (|aux1[416:2]| x1 x0) (and (|aux1[416:1][419:1][454:0]| x1 x0 var546) (and (<= (+ 1 x0) x1) (and (= (+ var542 var546) x1) (and (= (+ 1 var544) var546) (<= 0 x0))))))))) (|aux1[416:1][492:0]| x1 x2))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|aux1[479:2]| x0 x1) (not (= x1 x0))) (|aux1[479:1][482:0]| x0 x1))))
(assert (forall ((x3 Int)(x0 Int)(x2 Int)(var547 Int)(x1 Int)(var548 Int)(x6 Int)(x4 Int)) (=> (and (|dotsPrint[472:2][475:0]| x3 var547 x6) (and (|dotsPrint[465:2][468:0]| x3 var548 x4) (and (|aux1[416:2]| x3 x2) (and (|aux1[416:1][419:1][454:0]| x3 x2 x1) (and (= x0 (+ 1 x2)) (and (= (+ var547 x1) x3) (and (= (+ 1 var548) x1) (and (<= (+ 1 x2) x3) (<= 0 x2))))))))) (|aux1[479:2]| x3 x0))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|dotsPrint[472:1]| x1 x2) (= x2 0)) (|dotsPrint[472:2][475:0]| x1 x2 x0))))
(assert (forall ((x3 Int)(x0 Int)(x1 Int)(var549 Int)(x2 Int)(x5 Int)) (=> (and (|dotsPrint[465:2][468:0]| x3 var549 x5) (and (|aux1[416:2]| x3 x2) (and (|aux1[416:1][419:1][454:0]| x3 x2 x1) (and (= (+ x0 x1) x3) (and (= (+ 1 var549) x1) (and (<= (+ 1 x2) x3) (<= 0 x2))))))) (|dotsPrint[472:1]| x3 x0))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|dotsPrint[465:1]| x1 x2) (= x2 0)) (|dotsPrint[465:2][468:0]| x1 x2 x0))))
(assert (forall ((x3 Int)(x0 Int)(x1 Int)(x2 Int)) (=> (and (|aux1[416:2]| x3 x2) (and (|aux1[416:1][419:1][454:0]| x3 x2 x1) (and (= (+ 1 x0) x1) (and (<= (+ 1 x2) x3) (<= 0 x2))))) (|dotsPrint[465:1]| x3 x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(var556 Int)(var555 Int)(var557 Int)(var554 Int)) (=> (and (|aux2[403:7][406:0]| var555 var554 var556 x0 var557 0 true) (and (|assign[354:4][380:0][386:1][397:0]| x0 var556 var555 var556 var554) (and (|assign[354:4][380:0][431:1][442:0]| x0 var556 var555 x1 x2) (and (|loop[339:1]| x0 var556) (and (|loop[339:2][341:1][347:0]| x0 var556 var556 var557) (and (= (+ 1 var556) x0) (and (= var555 (+ 1 var557)) (<= var555 x0)))))))) (|aux1[416:1][419:1][454:0]| x0 x1 x2))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(x3 Int)(x4 Int)(var558 Int)) (=> (and (|assign[354:3][356:1][374:0]| x2 x0 x1 x0 var558) (and (|assign[354:2]| x2 x0 x1) (and (|assign[354:4][380:0][431:0]| x2 x0 x1 x3) (and (= x4 x1) (= x0 x3))))) (|assign[354:4][380:0][431:1][442:0]| x2 x0 x1 x3 x4))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)(var559 Int)) (=> (and (|assign[354:2]| x2 x3 x4) (and (|aux2[403:7][406:0]| x4 var559 x3 x2 x0 0 true) (and (|assign[354:4][380:0][386:1][397:0]| x2 x3 x4 x3 var559) (and (|loop[339:1]| x2 x3) (and (|loop[339:2][341:1][347:0]| x2 x3 x3 x0) (and (|aux1[416:1][419:0]| x2 x1) (and (<= x4 x2) (and (= x4 (+ 1 x0)) (= (+ 1 x3) x2))))))))) (|assign[354:4][380:0][431:0]| x2 x3 x4 x1))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|aux1[416:2]| x0 x1) (not (= x1 x0))) (|aux1[416:1][419:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)(var562 Int)(var560 Int)(var563 Int)(var561 Int)) (=> (and (|aux2[403:7][406:0]| var560 var561 var562 x1 var563 0 true) (and (|assign[354:4][380:0][386:1][397:0]| x1 var562 var560 var562 var561) (and (|loop[339:1]| x1 var562) (and (|loop[339:2][341:1][347:0]| x1 var562 var562 var563) (and (= x0 0) (and (= (+ 1 var562) x1) (and (= var560 (+ 1 var563)) (<= var560 x1)))))))) (|aux1[416:2]| x1 x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)(x6 Int)(x0 Bool)) (=> (and (|aux2[403:6]| x1 x2 x3 x4 x5 x6) (and (>= x6 x3) x0)) (|aux2[403:7][406:0]| x1 x2 x3 x4 x5 x6 x0))))
(assert (forall ((x1 Int)(x5 Int)(x2 Int)(x3 Int)(x4 Int)(x0 Int)) (=> (and (|assign[354:4][380:0][386:1][397:0]| x3 x2 x1 x2 x5) (and (|loop[339:1]| x3 x2) (and (|loop[339:2][341:1][347:0]| x3 x2 x2 x4) (and (= x0 0) (and (<= x1 x3) (= x1 (+ 1 x4))))))) (|aux2[403:6]| x1 x5 x2 x3 x4 x0))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(x3 Int)(x4 Int)(var564 Int)) (=> (and (|assign[354:3][356:1][374:0]| x2 x0 x1 x0 var564) (and (|assign[354:2]| x2 x0 x1) (and (|assign[354:4][380:0][386:0]| x2 x0 x1 x3) (and (= x4 x1) (= x0 x3))))) (|assign[354:4][380:0][386:1][397:0]| x2 x0 x1 x3 x4))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)) (=> (and (|assign[354:2]| x2 x3 x4) (and (|loop[339:1]| x2 x3) (and (|loop[339:2][341:1][347:0]| x2 x3 x3 x0) (and (<= x4 x2) (and (= x4 (+ 1 x0)) (= x1 x3)))))) (|assign[354:4][380:0][386:0]| x2 x3 x4 x1))))
(assert (forall ((x3 Int)(x4 Int)(x5 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|assign[354:2]| x3 x4 x5) (and (|loop[339:2][341:1][347:0]| x3 x4 x4 x0) (and (|loop[339:1]| x3 x4) (and (|loop[339:2][362:1][368:0]| x3 x4 x1 x2) (and (<= x5 x3) (= x5 (+ 1 x0))))))) (|assign[354:3][356:1][374:0]| x3 x4 x5 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)) (=> (and (|loop[339:1]| x2 x3) (and (|loop[339:2][362:0]| x2 0 x0) (and (= x3 0) (and (= x1 0) (>= x2 1))))) (|loop[339:2][362:1][368:0]| x2 x3 x0 x1))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)(var565 Int)(var566 Int)) (=> (and (|assign[354:3][356:0]| x1 x0 var565 x2) (and (|loop[339:1]| x1 x0) (and (|loop[339:2][341:1][347:0]| x1 x0 x0 var566) (and (<= var565 x1) (= var565 (+ 1 var566)))))) (|loop[339:2][362:0]| x1 x0 x2))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|assign[354:2]| x1 x2 x3) (= x0 x2)) (|assign[354:3][356:0]| x1 x2 x3 x0))))
(assert (forall ((x1 Int)(x0 Int)(x3 Int)(x2 Int)) (=> (and (|loop[339:1]| x1 x0) (and (|loop[339:2][341:1][347:0]| x1 x0 x0 x2) (and (<= x3 x1) (= x3 (+ 1 x2))))) (|assign[354:2]| x1 x0 x3))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)) (=> (and (|loop[339:1]| x2 x3) (and (|loop[339:2][341:0]| x2 0 x0) (and (= x3 0) (and (= x1 0) (>= x2 1))))) (|loop[339:2][341:1][347:0]| x2 x3 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|loop[339:1]| x1 x2) (= x0 x2)) (|loop[339:2][341:0]| x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (= x0 0) (>= x1 1)) (|loop[339:1]| x1 x0))))
(check-sat)
(get-model)
(exit)
