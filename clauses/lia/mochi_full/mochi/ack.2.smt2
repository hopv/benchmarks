(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/ack.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_18[0:0]| ( Int) Bool)
(declare-fun |ack[0:2][0:0]| ( Int  Int  Int) Bool)
(declare-fun |ack[0:1]| ( Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_18[0:0]| x0))))
(assert (forall ((x0 Int)(x3 Int)(x2 Int)(x1 Int)) (=> (and (|ack[0:2][0:0]| x1 x2 x3) (and (<= (+ 1 x3) x2) (and (>= x1 0) (>= x2 0)))) (|fail_18[0:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(var41 Int)(var40 Int)(var42 Int)) (=> (and (|ack[0:2][0:0]| var40 var42 x3) (and (|ack[0:2][0:0]| x1 var41 var42) (and (|ack[0:1]| x1 x2) (and (not (= x1 0)) (and (= (+ 1 var41) x2) (and (= (+ 1 var40) x1) (not (= x2 0)))))))) (|ack[0:2][0:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|ack[0:1]| x1 x2) (and (= x1 0) (= x0 (+ 1 x2)))) (|ack[0:2][0:0]| x1 x2 x0))))
(assert (forall ((x0 Int)(x3 Int)(x1 Int)(var43 Int)(x2 Int)) (=> (and (|ack[0:2][0:0]| x1 var43 x3) (and (|ack[0:1]| x1 x2) (and (= (+ 1 x0) x1) (and (= (+ 1 var43) x2) (and (not (= x1 0)) (not (= x2 0))))))) (|ack[0:1]| x0 x3))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|ack[0:1]| x1 x2) (and (= x1 0) (= x0 (+ 1 x2)))) (|ack[0:2][0:0]| x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)) (=> (and (|ack[0:1]| x1 x2) (and (= (+ 1 x0) x2) (and (not (= x1 0)) (not (= x2 0))))) (|ack[0:1]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (>= x0 0) (>= x1 0)) (|ack[0:1]| x0 x1))))
(check-sat)
(get-model)
(exit)
