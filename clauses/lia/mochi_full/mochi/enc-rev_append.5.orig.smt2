(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/enc-rev_append.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_23[222:0]| ( Int) Bool)
(declare-fun |append[205:2][217:0]| ( Int  Int  Int) Bool)
(declare-fun |append[208:2][211:0]| ( Int  Int  Int) Bool)
(declare-fun |append[208:1]| ( Int  Int) Bool)
(declare-fun |append[205:1]| ( Int  Int) Bool)
(declare-fun |rev[174:1][200:0]| ( Int  Int) Bool)
(declare-fun |append[184:2][196:0]| ( Int  Int  Int) Bool)
(declare-fun |append[187:2][190:0]| ( Int  Int  Int) Bool)
(declare-fun |append[187:1]| ( Int  Int) Bool)
(declare-fun |append[184:1]| ( Int  Int) Bool)
(declare-fun |rev[177:1][180:0]| ( Int  Int) Bool)
(declare-fun |rev[177:0]| ( Int) Bool)
(declare-fun |rev[174:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_23[222:0]| x0))))
(assert (forall ((x0 Int)(x4 Int)(x3 Int)(x2 Int)) (=> (and (|append[205:2][217:0]| x3 x2 x4) (and (|rev[174:1][200:0]| x3 x3) (not (= x4 (+ x3 x2))))) (|fail_23[222:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(var232 Int)(var231 Int)) (=> (and (|append[205:1]| x0 x1) (and (|append[208:2][211:0]| var231 x1 var232) (and (= x2 (+ 1 var232)) (and (not (= x0 0)) (= (+ 1 var231) x0))))) (|append[205:2][217:0]| x0 x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|append[208:1]| x1 x2) (and (= x1 0) (= x0 x2))) (|append[208:2][211:0]| x1 x2 x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|append[205:1]| x1 x2) (and (= (+ 1 x0) x1) (not (= x1 0)))) (|append[208:1]| x0 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (|rev[174:1][200:0]| x1 x1) (|append[205:1]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)(var233 Int)(var234 Int)) (=> (and (|append[184:2][196:0]| var234 1 x1) (and (|rev[174:0]| x0) (and (|rev[177:1][180:0]| var233 var234) (and (not (= x0 0)) (= (+ 1 var233) x0))))) (|rev[174:1][200:0]| x0 x1))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(var236 Int)(var235 Int)) (=> (and (|append[184:1]| x0 x1) (and (|append[187:2][190:0]| var235 x1 var236) (and (= x2 (+ 1 var236)) (and (not (= x0 0)) (= (+ 1 var235) x0))))) (|append[184:2][196:0]| x0 x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|append[187:1]| x1 x2) (and (= x1 0) (= x0 x2))) (|append[187:2][190:0]| x1 x2 x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|append[184:1]| x1 x2) (and (= (+ 1 x0) x1) (not (= x1 0)))) (|append[187:1]| x0 x2))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(var237 Int)) (=> (and (|rev[174:0]| x1) (and (|rev[177:1][180:0]| var237 x2) (and (= x0 1) (and (not (= x1 0)) (= (+ 1 var237) x1))))) (|append[184:1]| x2 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|rev[177:0]| x1) (and (= x0 0) (= x1 0))) (|rev[177:1][180:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|rev[174:0]| x1) (and (= (+ 1 x0) x1) (not (= x1 0)))) (|rev[177:0]| x0))))
(assert (forall ((x0 Int)) (|rev[174:0]| x0)))
(check-sat)
(get-model)
(exit)
