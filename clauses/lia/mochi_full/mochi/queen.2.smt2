(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/queen.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_47[0:0]| ( Int) Bool)
(declare-fun |aux1[0:1][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |aux1[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |aux1[0:2]| ( Int  Int) Bool)
(declare-fun |aux2[0:7][0:0]| ( Int  Int  Int  Int  Int  Int  Bool) Bool)
(declare-fun |aux2[0:6]| ( Int  Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[0:4][0:0][0:1][0:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[0:3][0:1][0:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[0:4][0:0][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |assign[0:3][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |assign[0:2]| ( Int  Int  Int) Bool)
(declare-fun |loop[0:2][0:1][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |loop[0:2][0:0]| ( Int  Int  Int) Bool)
(declare-fun |loop[0:1]| ( Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_47[0:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x3 Int)(x1 Int)) (=> (and (|aux1[0:2]| x3 x2) (and (|aux1[0:1][0:1][0:0]| x3 x2 x1) (or (>= x2 (+ 1 x3)) (and (not (= x2 x3)) (>= 0 (+ 1 x2)))))) (|fail_47[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(var277 Int)(var276 Int)(var278 Int)(var275 Int)) (=> (and (|aux2[0:7][0:0]| var276 var275 var277 x0 var278 0 true) (and (|assign[0:4][0:0][0:1][0:0]| x0 var277 var276 var277 var275) (and (|assign[0:4][0:0][0:1][0:0]| x0 var277 var276 x1 x2) (and (|loop[0:1]| x0 var277) (and (|loop[0:2][0:1][0:0]| x0 var277 var277 var278) (and (= (+ 1 var277) x0) (and (= var276 (+ 1 var278)) (<= var276 x0)))))))) (|aux1[0:1][0:1][0:0]| x0 x1 x2))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(x3 Int)(x4 Int)(var279 Int)) (=> (and (|assign[0:3][0:1][0:0]| x2 x0 x1 x0 var279) (and (|assign[0:2]| x2 x0 x1) (and (|assign[0:4][0:0][0:0]| x2 x0 x1 x3) (and (= x4 x1) (= x0 x3))))) (|assign[0:4][0:0][0:1][0:0]| x2 x0 x1 x3 x4))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)(var280 Int)) (=> (and (|assign[0:2]| x2 x3 x4) (and (|aux2[0:7][0:0]| x4 var280 x3 x2 x0 0 true) (and (|assign[0:4][0:0][0:1][0:0]| x2 x3 x4 x3 var280) (and (|loop[0:1]| x2 x3) (and (|loop[0:2][0:1][0:0]| x2 x3 x3 x0) (and (|aux1[0:1][0:0]| x2 x1) (and (<= x4 x2) (and (= x4 (+ 1 x0)) (= (+ 1 x3) x2))))))))) (|assign[0:4][0:0][0:0]| x2 x3 x4 x1))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|aux1[0:2]| x0 x1) (not (= x1 x0))) (|aux1[0:1][0:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)(var283 Int)(var281 Int)(var284 Int)(var282 Int)) (=> (and (|aux2[0:7][0:0]| var281 var282 var283 x1 var284 0 true) (and (|assign[0:4][0:0][0:1][0:0]| x1 var283 var281 var283 var282) (and (|loop[0:1]| x1 var283) (and (|loop[0:2][0:1][0:0]| x1 var283 var283 var284) (and (= x0 0) (and (= (+ 1 var283) x1) (and (= var281 (+ 1 var284)) (<= var281 x1)))))))) (|aux1[0:2]| x1 x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)(x6 Int)(x0 Bool)) (=> (and (|aux2[0:6]| x1 x2 x3 x4 x5 x6) (and (>= x6 x3) x0)) (|aux2[0:7][0:0]| x1 x2 x3 x4 x5 x6 x0))))
(assert (forall ((x1 Int)(x5 Int)(x2 Int)(x3 Int)(x4 Int)(x0 Int)) (=> (and (|assign[0:4][0:0][0:1][0:0]| x3 x2 x1 x2 x5) (and (|loop[0:1]| x3 x2) (and (|loop[0:2][0:1][0:0]| x3 x2 x2 x4) (and (= x0 0) (and (<= x1 x3) (= x1 (+ 1 x4))))))) (|aux2[0:6]| x1 x5 x2 x3 x4 x0))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(x3 Int)(x4 Int)(var285 Int)) (=> (and (|assign[0:3][0:1][0:0]| x2 x0 x1 x0 var285) (and (|assign[0:2]| x2 x0 x1) (and (|assign[0:4][0:0][0:0]| x2 x0 x1 x3) (and (= x4 x1) (= x0 x3))))) (|assign[0:4][0:0][0:1][0:0]| x2 x0 x1 x3 x4))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)) (=> (and (|assign[0:2]| x2 x3 x4) (and (|loop[0:1]| x2 x3) (and (|loop[0:2][0:1][0:0]| x2 x3 x3 x0) (and (<= x4 x2) (and (= x4 (+ 1 x0)) (= x1 x3)))))) (|assign[0:4][0:0][0:0]| x2 x3 x4 x1))))
(assert (forall ((x3 Int)(x4 Int)(x5 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|assign[0:2]| x3 x4 x5) (and (|loop[0:2][0:1][0:0]| x3 x4 x4 x0) (and (|loop[0:1]| x3 x4) (and (|loop[0:2][0:1][0:0]| x3 x4 x1 x2) (and (<= x5 x3) (= x5 (+ 1 x0))))))) (|assign[0:3][0:1][0:0]| x3 x4 x5 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)) (=> (and (|loop[0:1]| x2 x3) (and (|loop[0:2][0:0]| x2 0 x0) (and (= x3 0) (and (= x1 0) (>= x2 1))))) (|loop[0:2][0:1][0:0]| x2 x3 x0 x1))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)(var286 Int)(var287 Int)) (=> (and (|assign[0:3][0:0]| x1 x0 var286 x2) (and (|loop[0:1]| x1 x0) (and (|loop[0:2][0:1][0:0]| x1 x0 x0 var287) (and (<= var286 x1) (= var286 (+ 1 var287)))))) (|loop[0:2][0:0]| x1 x0 x2))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|assign[0:2]| x1 x2 x3) (= x0 x2)) (|assign[0:3][0:0]| x1 x2 x3 x0))))
(assert (forall ((x1 Int)(x0 Int)(x3 Int)(x2 Int)) (=> (and (|loop[0:1]| x1 x0) (and (|loop[0:2][0:1][0:0]| x1 x0 x0 x2) (and (<= x3 x1) (= x3 (+ 1 x2))))) (|assign[0:2]| x1 x0 x3))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)) (=> (and (|loop[0:1]| x2 x3) (and (|loop[0:2][0:0]| x2 0 x0) (and (= x3 0) (and (= x1 0) (>= x2 1))))) (|loop[0:2][0:1][0:0]| x2 x3 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|loop[0:1]| x1 x2) (= x0 x2)) (|loop[0:2][0:0]| x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (= x0 0) (>= x1 1)) (|loop[0:1]| x1 x0))))
(check-sat)
(get-model)
(exit)
