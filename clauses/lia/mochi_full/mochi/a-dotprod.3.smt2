(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/a-dotprod.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_21[0:0]| ( Int) Bool)
(declare-fun |dotprod[0:2][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |dotprod[0:2][0:0]| ( Int  Int) Bool)
(declare-fun |dotprod[0:1][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |dotprod[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |dotprod[0:4]| ( Int  Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_21[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|dotprod[0:1][0:0]| x2 x1) (or (>= 0 (+ 1 x1)) (>= x1 x2))) (|fail_21[0:0]| x0))))
(assert (forall ((x1 Int)(x3 Int)(x0 Int)(var141 Int)(x2 Int)(var142 Int)) (=> (and (|dotprod[0:1][0:0]| x1 x3) (and (|dotprod[0:1][0:1][0:0]| x1 x0 var141) (and (|dotprod[0:4]| x1 x0 x2) (and (|dotprod[0:2][0:1][0:0]| x1 x0 var142) (<= (+ 1 x0) x1))))) (|dotprod[0:1][0:0]| x1 x3))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|dotprod[0:4]| x0 x1 x2) (<= (+ 1 x1) x0)) (|dotprod[0:1][0:0]| x0 x1))))
(assert (forall ((x3 Int)(x0 Int)(x1 Int)(x2 Int)(x4 Int)(x5 Int)(x6 Int)) (=> (and (|dotprod[0:1][0:1][0:0]| x3 x2 x5) (and (|dotprod[0:4]| x3 x2 x4) (and (|dotprod[0:2][0:1][0:0]| x3 x2 x6) (and (= x0 (+ 1 x2)) (and (<= (+ 1 x2) x3) (= x1 (+ x4 (* x5 x6)))))))) (|dotprod[0:4]| x3 x0 x1))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|dotprod[0:2][0:0]| x0 x1) (and (= x2 0) (and (<= 0 x1) (<= (+ 1 x1) x0)))) (|dotprod[0:2][0:1][0:0]| x0 x1 x2))))
(assert (forall ((x1 Int)(x3 Int)(x2 Int)(var143 Int)) (=> (and (|dotprod[0:4]| x1 x3 x2) (and (|dotprod[0:1][0:1][0:0]| x1 x3 var143) (<= (+ 1 x3) x1))) (|dotprod[0:2][0:0]| x1 x3))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|dotprod[0:1][0:0]| x0 x1) (and (= x2 0) (and (<= 0 x1) (<= (+ 1 x1) x0)))) (|dotprod[0:1][0:1][0:0]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|dotprod[0:4]| x0 x1 x2) (<= (+ 1 x1) x0)) (|dotprod[0:1][0:0]| x0 x1))))
(assert (forall ((x2 Int)(x1 Int)(x0 Int)) (=> (and (= x1 0) (= x1 x0)) (|dotprod[0:4]| x2 x1 x0))))
(check-sat)
(get-model)
(exit)
