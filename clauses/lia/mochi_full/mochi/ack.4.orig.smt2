(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/ack.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_18[194:0]| ( Int) Bool)
(declare-fun |ack[147:2][189:0]| ( Int  Int  Int) Bool)
(declare-fun |ack[170:2][183:0]| ( Int  Int  Int) Bool)
(declare-fun |ack[176:2][179:0]| ( Int  Int  Int) Bool)
(declare-fun |ack[176:1]| ( Int  Int) Bool)
(declare-fun |ack[170:1]| ( Int  Int) Bool)
(declare-fun |ack[153:2][166:0]| ( Int  Int  Int) Bool)
(declare-fun |ack[159:2][162:0]| ( Int  Int  Int) Bool)
(declare-fun |ack[159:1]| ( Int  Int) Bool)
(declare-fun |ack[153:1]| ( Int  Int) Bool)
(declare-fun |ack[147:1]| ( Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_18[194:0]| x0))))
(assert (forall ((x0 Int)(x3 Int)(x2 Int)(x1 Int)) (=> (and (|ack[147:2][189:0]| x1 x2 x3) (and (<= (+ 1 x3) x2) (and (>= x1 0) (>= x2 0)))) (|fail_18[194:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(var103 Int)(var102 Int)(var104 Int)) (=> (and (|ack[170:2][183:0]| var102 var104 x3) (and (|ack[153:2][166:0]| x1 var103 var104) (and (|ack[147:1]| x1 x2) (and (not (= x1 0)) (and (= (+ 1 var103) x2) (and (= (+ 1 var102) x1) (not (= x2 0)))))))) (|ack[147:2][189:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(var105 Int)) (=> (and (|ack[176:2][179:0]| var105 1 x3) (and (|ack[170:1]| x1 x2) (and (= x2 0) (and (not (= x1 0)) (= (+ 1 var105) x1))))) (|ack[170:2][183:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|ack[176:1]| x1 x2) (and (= x1 0) (= x0 (+ 1 x2)))) (|ack[176:2][179:0]| x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)) (=> (and (|ack[170:1]| x2 0) (and (= x0 1) (and (not (= x2 0)) (= (+ 1 x1) x2)))) (|ack[176:1]| x1 x0))))
(assert (forall ((x0 Int)(x3 Int)(x1 Int)(var106 Int)(x2 Int)) (=> (and (|ack[153:2][166:0]| x1 var106 x3) (and (|ack[147:1]| x1 x2) (and (= (+ 1 x0) x1) (and (= (+ 1 var106) x2) (and (not (= x1 0)) (not (= x2 0))))))) (|ack[170:1]| x0 x3))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(var107 Int)) (=> (and (|ack[159:2][162:0]| var107 1 x3) (and (|ack[153:1]| x1 x2) (and (= x2 0) (and (not (= x1 0)) (= (+ 1 var107) x1))))) (|ack[153:2][166:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|ack[159:1]| x1 x2) (and (= x1 0) (= x0 (+ 1 x2)))) (|ack[159:2][162:0]| x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)) (=> (and (|ack[153:1]| x2 0) (and (= x0 1) (and (not (= x2 0)) (= (+ 1 x1) x2)))) (|ack[159:1]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)) (=> (and (|ack[147:1]| x1 x2) (and (= (+ 1 x0) x2) (and (not (= x1 0)) (not (= x2 0))))) (|ack[153:1]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (>= x0 0) (>= x1 0)) (|ack[147:1]| x0 x1))))
(check-sat)
(get-model)
(exit)
