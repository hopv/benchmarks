(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/array_init.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_17[47:0]| ( Int) Bool)
(declare-fun |init[19:3][22:0][29:1][40:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |init[19:2][31:1][38:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |init[19:2][31:0]| ( Int  Int  Int) Bool)
(declare-fun |init[19:3][22:0][29:0]| ( Int  Int  Int) Bool)
(declare-fun |init[19:1]| ( Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_17[47:0]| x0))))
(assert (forall ((x0 Int)(x3 Int)(x2 Int)(x1 Int)) (=> (and (|init[19:3][22:0][29:1][40:0]| 0 x1 x2 x3) (and (<= x3 0) (and (<= 0 x2) (<= (+ 1 x2) x1)))) (|fail_17[47:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)) (=> (and (|init[19:1]| x0 x1) (and (|init[19:2][31:1][38:0]| x0 x1 x2 x3) (>= x0 x1))) (|init[19:3][22:0][29:1][40:0]| x0 x1 x2 x3))))
(assert (forall ((x3 Int)(x4 Int)(x1 Int)(x2 Int)) (=> (and (|init[19:1]| x3 x4) (and (|init[19:2][31:0]| 0 x4 x1) (and (= x3 0) (and (= x2 (- 1)) (or (>= 0 (+ 1 x1)) (>= x1 x4)))))) (|init[19:2][31:1][38:0]| x3 x4 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|init[19:1]| x0 x1) (and (|init[19:3][22:0][29:0]| x0 x1 x2) (>= x0 x1))) (|init[19:2][31:0]| x0 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x1 Int)) (=> (and (|init[19:1]| x2 x3) (and (= x2 0) (and (<= 0 x1) (<= (+ 1 x1) x3)))) (|init[19:3][22:0][29:0]| x2 x3 x1))))
(assert (forall ((x0 Int)(x1 Int)) (=> (= x0 0) (|init[19:1]| x0 x1))))
(check-sat)
(get-model)
(exit)
