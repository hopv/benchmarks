(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/inc3.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_16[0:0]| ( Int) Bool)
(declare-fun |inc3[0:1][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |inc3[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |inc3[0:2]| ( Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_16[0:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|inc3[0:1][0:0]| x2 x1) (and (>= x2 1) (or (>= 0 (+ 1 x1)) (>= x1 x2)))) (|fail_16[0:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)(var54 Int)(var55 Int)) (=> (and (|inc3[0:1][0:0]| x1 x2) (and (|inc3[0:1][0:1][0:0]| x1 x0 var54) (and (|inc3[0:2]| x1 x0) (and (|inc3[0:1][0:1][0:0]| x1 x0 var55) (<= (+ 1 x0) x1))))) (|inc3[0:1][0:0]| x1 x2))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|inc3[0:2]| x0 x1) (<= (+ 1 x1) x0)) (|inc3[0:1][0:0]| x0 x1))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(x3 Int)(x4 Int)) (=> (and (|inc3[0:1][0:1][0:0]| x2 x1 x3) (and (|inc3[0:2]| x2 x1) (and (|inc3[0:1][0:1][0:0]| x2 x1 x4) (and (= x0 (+ 1 x1)) (<= (+ 1 x1) x2))))) (|inc3[0:2]| x2 x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|inc3[0:1][0:0]| x0 x1) (and (= x2 0) (and (<= 0 x1) (and (<= (+ 1 x1) x0) (>= x0 1))))) (|inc3[0:1][0:1][0:0]| x0 x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(var56 Int)) (=> (and (|inc3[0:2]| x1 x2) (and (|inc3[0:1][0:1][0:0]| x1 x2 var56) (<= (+ 1 x2) x1))) (|inc3[0:1][0:0]| x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|inc3[0:1][0:0]| x0 x1) (and (= x2 0) (and (<= 0 x1) (and (<= (+ 1 x1) x0) (>= x0 1))))) (|inc3[0:1][0:1][0:0]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|inc3[0:2]| x0 x1) (<= (+ 1 x1) x0)) (|inc3[0:1][0:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (= x0 0) (>= x1 1)) (|inc3[0:2]| x1 x0))))
(check-sat)
(get-model)
(exit)
