(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/sigma_sum.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_15[0:0]| ( Int) Bool)
(declare-fun |sigma[0:2][0:0]| ( Int  Int) Bool)
(declare-fun |sigma[0:0][0:1][0:0]| ( Int  Int) Bool)
(declare-fun |sum[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |sum[0:0]| ( Int) Bool)
(declare-fun |sigma[0:0][0:0]| ( Int) Bool)
(declare-fun |sigma[0:1]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_15[0:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|sigma[0:2][0:0]| x1 x2) (<= (+ 1 x2) x1)) (|fail_15[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(var51 Int)(var50 Int)(var49 Int)) (=> (and (|sigma[0:2][0:0]| var49 var50) (and (|sigma[0:1]| x0) (and (|sigma[0:0][0:1][0:0]| x0 var51) (and (= x1 (+ var51 var50)) (and (= (+ 1 var49) x0) (>= x0 1)))))) (|sigma[0:2][0:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|sigma[0:1]| x1) (and (= x0 0) (<= x1 0))) (|sigma[0:2][0:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|sigma[0:1]| x1) (and (|sigma[0:0][0:1][0:0]| x1 x2) (and (= (+ 1 x0) x1) (>= x1 1)))) (|sigma[0:1]| x0))))
(assert (forall ((x1 Int)(x2 Int)) (=> (|sum[0:1][0:0]| x1 x2) (|sigma[0:0][0:1][0:0]| x1 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|sum[0:0]| x1) (and (= x0 0) (<= x1 0))) (|sum[0:1][0:0]| x1 x0))))
(assert (forall ((x1 Int)) (=> (|sigma[0:0][0:0]| x1) (|sum[0:0]| x1))))
(assert (forall ((x0 Int)) (=> (and (|sigma[0:1]| x0) (>= x0 1)) (|sigma[0:0][0:0]| x0))))
(assert (forall ((x0 Int)) (|sigma[0:1]| x0)))
(check-sat)
(get-model)
(exit)
