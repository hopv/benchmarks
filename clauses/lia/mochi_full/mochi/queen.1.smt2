(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/queen.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_47[0:0]| ( Int) Bool)
(declare-fun |aux1[0:1][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |aux1[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |aux1[0:2]| ( Int  Int) Bool)
(declare-fun |aux2[0:7][0:0]| ( Int  Int  Int  Int  Int  Int  Bool) Bool)
(declare-fun |aux2[0:5][0:1][0:0]| ( Int  Int  Int  Int  Int  Int  Int) Bool)
(declare-fun |aux2[0:5][0:0]| ( Int  Int  Int  Int  Int  Int) Bool)
(declare-fun |aux2[0:6]| ( Int  Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[0:4][0:0][0:1][0:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[0:3][0:1][0:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |assign[0:4][0:0][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |assign[0:3][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |assign[0:2]| ( Int  Int  Int) Bool)
(declare-fun |loop[0:2][0:1][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |loop[0:2][0:0]| ( Int  Int  Int) Bool)
(declare-fun |loop[0:1]| ( Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_47[0:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x3 Int)(x1 Int)) (=> (and (|aux1[0:2]| x3 x2) (and (|aux1[0:1][0:1][0:0]| x3 x2 x1) (or (>= x2 (+ 1 x3)) (and (not (= x2 x3)) (>= 0 (+ 1 x2)))))) (|fail_47[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(var42 Int)(var41 Int)(var43 Int)(var40 Int)) (=> (and (|aux2[0:7][0:0]| var41 var40 var42 x0 var43 0 true) (and (|assign[0:4][0:0][0:1][0:0]| x0 var42 var41 var42 var40) (and (|assign[0:4][0:0][0:1][0:0]| x0 var42 var41 x1 x2) (and (|loop[0:1]| x0 var42) (and (|loop[0:2][0:1][0:0]| x0 var42 var42 var43) (and (= (+ 1 var42) x0) (and (= var41 (+ 1 var43)) (<= var41 x0)))))))) (|aux1[0:1][0:1][0:0]| x0 x1 x2))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(x3 Int)(x4 Int)(var44 Int)) (=> (and (|assign[0:3][0:1][0:0]| x2 x0 x1 x0 var44) (and (|assign[0:2]| x2 x0 x1) (and (|assign[0:4][0:0][0:0]| x2 x0 x1 x3) (and (= x4 x1) (= x0 x3))))) (|assign[0:4][0:0][0:1][0:0]| x2 x0 x1 x3 x4))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)(var45 Int)) (=> (and (|assign[0:2]| x2 x3 x4) (and (|aux2[0:7][0:0]| x4 var45 x3 x2 x0 0 true) (and (|assign[0:4][0:0][0:1][0:0]| x2 x3 x4 x3 var45) (and (|loop[0:1]| x2 x3) (and (|loop[0:2][0:1][0:0]| x2 x3 x3 x0) (and (|aux1[0:1][0:0]| x2 x1) (and (<= x4 x2) (and (= x4 (+ 1 x0)) (= (+ 1 x3) x2))))))))) (|assign[0:4][0:0][0:0]| x2 x3 x4 x1))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|aux1[0:2]| x0 x1) (not (= x1 x0))) (|aux1[0:1][0:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)(var48 Int)(var46 Int)(var49 Int)(var47 Int)) (=> (and (|aux2[0:7][0:0]| var46 var47 var48 x1 var49 0 true) (and (|assign[0:4][0:0][0:1][0:0]| x1 var48 var46 var48 var47) (and (|loop[0:1]| x1 var48) (and (|loop[0:2][0:1][0:0]| x1 var48 var48 var49) (and (= x0 0) (and (= (+ 1 var48) x1) (and (= var46 (+ 1 var49)) (<= var46 x1)))))))) (|aux1[0:2]| x1 x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)(x0 Int)(x6 Bool)(var50 Int)) (=> (and (|aux2[0:6]| x1 x2 x3 x4 x5 x0) (and (|aux2[0:5][0:1][0:0]| x1 x2 x3 x4 x5 x0 var50) (and (<= (+ 1 var50) x2) (and (= (+ x2 x0) (+ var50 x3)) (and (<= (+ 1 x0) x3) (not x6)))))) (|aux2[0:7][0:0]| x1 x2 x3 x4 x5 x0 x6))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)(x6 Int)) (=> (and (|assign[0:4][0:0][0:1][0:0]| x3 x2 x1 x2 x0) (and (|assign[0:4][0:0][0:1][0:0]| x3 x2 x1 x5 x6) (and (|loop[0:1]| x3 x2) (and (|loop[0:2][0:1][0:0]| x3 x2 x2 x4) (and (<= x1 x3) (= x1 (+ 1 x4))))))) (|aux2[0:5][0:1][0:0]| x1 x0 x2 x3 x4 x5 x6))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(x3 Int)(x4 Int)(var51 Int)) (=> (and (|assign[0:3][0:1][0:0]| x2 x0 x1 x0 var51) (and (|assign[0:2]| x2 x0 x1) (and (|assign[0:4][0:0][0:0]| x2 x0 x1 x3) (and (= x4 x1) (= x0 x3))))) (|assign[0:4][0:0][0:1][0:0]| x2 x0 x1 x3 x4))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)(var52 Int)) (=> (and (|assign[0:2]| x2 x3 x4) (and (|aux2[0:5][0:0]| x4 var52 x3 x2 x0 x1) (and (|assign[0:4][0:0][0:1][0:0]| x2 x3 x4 x3 var52) (and (|loop[0:1]| x2 x3) (and (|loop[0:2][0:1][0:0]| x2 x3 x3 x0) (and (<= x4 x2) (= x4 (+ 1 x0)))))))) (|assign[0:4][0:0][0:0]| x2 x3 x4 x1))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|aux2[0:6]| x0 x1 x2 x3 x4 x5) (<= (+ 1 x5) x2)) (|aux2[0:5][0:0]| x0 x1 x2 x3 x4 x5))))
(assert (forall ((x1 Int)(x5 Int)(x2 Int)(x3 Int)(x4 Int)(x0 Int)) (=> (and (|assign[0:4][0:0][0:1][0:0]| x3 x2 x1 x2 x5) (and (|loop[0:1]| x3 x2) (and (|loop[0:2][0:1][0:0]| x3 x2 x2 x4) (and (= x0 0) (and (<= x1 x3) (= x1 (+ 1 x4))))))) (|aux2[0:6]| x1 x5 x2 x3 x4 x0))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(x3 Int)(x4 Int)(var53 Int)) (=> (and (|assign[0:3][0:1][0:0]| x2 x0 x1 x0 var53) (and (|assign[0:2]| x2 x0 x1) (and (|assign[0:4][0:0][0:0]| x2 x0 x1 x3) (and (= x4 x1) (= x0 x3))))) (|assign[0:4][0:0][0:1][0:0]| x2 x0 x1 x3 x4))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)) (=> (and (|assign[0:2]| x2 x3 x4) (and (|loop[0:1]| x2 x3) (and (|loop[0:2][0:1][0:0]| x2 x3 x3 x0) (and (<= x4 x2) (and (= x4 (+ 1 x0)) (= x1 x3)))))) (|assign[0:4][0:0][0:0]| x2 x3 x4 x1))))
(assert (forall ((x3 Int)(x4 Int)(x5 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|assign[0:2]| x3 x4 x5) (and (|loop[0:2][0:1][0:0]| x3 x4 x4 x0) (and (|loop[0:1]| x3 x4) (and (|loop[0:2][0:1][0:0]| x3 x4 x1 x2) (and (<= x5 x3) (= x5 (+ 1 x0))))))) (|assign[0:3][0:1][0:0]| x3 x4 x5 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)) (=> (and (|loop[0:1]| x2 x3) (and (|loop[0:2][0:0]| x2 0 x0) (and (= x3 0) (and (= x1 0) (>= x2 1))))) (|loop[0:2][0:1][0:0]| x2 x3 x0 x1))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)(var54 Int)(var55 Int)) (=> (and (|assign[0:3][0:0]| x1 x0 var54 x2) (and (|loop[0:1]| x1 x0) (and (|loop[0:2][0:1][0:0]| x1 x0 x0 var55) (and (<= var54 x1) (= var54 (+ 1 var55)))))) (|loop[0:2][0:0]| x1 x0 x2))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|assign[0:2]| x1 x2 x3) (= x0 x2)) (|assign[0:3][0:0]| x1 x2 x3 x0))))
(assert (forall ((x1 Int)(x0 Int)(x3 Int)(x2 Int)) (=> (and (|loop[0:1]| x1 x0) (and (|loop[0:2][0:1][0:0]| x1 x0 x0 x2) (and (<= x3 x1) (= x3 (+ 1 x2))))) (|assign[0:2]| x1 x0 x3))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)) (=> (and (|loop[0:1]| x2 x3) (and (|loop[0:2][0:0]| x2 0 x0) (and (= x3 0) (and (= x1 0) (>= x2 1))))) (|loop[0:2][0:1][0:0]| x2 x3 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|loop[0:1]| x1 x2) (= x0 x2)) (|loop[0:2][0:0]| x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (= x0 0) (>= x1 1)) (|loop[0:1]| x1 x0))))
(check-sat)
(get-model)
(exit)
