(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/mochi/mc91_99.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_13[62:0]| ( Int) Bool)
(declare-fun |m[40:1][57:0]| ( Int  Int) Bool)
(declare-fun |m[50:1][53:0]| ( Int  Int) Bool)
(declare-fun |m[50:0]| ( Int) Bool)
(declare-fun |m[43:1][46:0]| ( Int  Int) Bool)
(declare-fun |m[43:0]| ( Int) Bool)
(declare-fun |m[40:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_13[62:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|m[40:1][57:0]| x1 x2) (and (not (= x2 91)) (<= x1 99))) (|fail_13[62:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(var26 Int)(var27 Int)) (=> (and (|m[50:1][53:0]| var27 x1) (and (|m[40:0]| x0) (and (|m[43:1][46:0]| var26 var27) (and (<= x0 100) (= var26 (+ 11 x0)))))) (|m[40:1][57:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|m[50:0]| x1) (and (= (+ 10 x0) x1) (>= x1 101))) (|m[50:1][53:0]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)(var28 Int)) (=> (and (|m[40:0]| x0) (and (|m[43:1][46:0]| var28 x1) (and (<= x0 100) (= var28 (+ 11 x0))))) (|m[50:0]| x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|m[43:0]| x1) (and (= (+ 10 x0) x1) (>= x1 101))) (|m[43:1][46:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|m[40:0]| x1) (and (= x0 (+ 11 x1)) (<= x1 100))) (|m[43:0]| x0))))
(assert (forall ((x0 Int)) (=> (<= x0 99) (|m[40:0]| x0))))
(check-sat)
(get-model)
(exit)
