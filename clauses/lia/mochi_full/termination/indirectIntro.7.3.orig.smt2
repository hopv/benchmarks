(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/termination/indirectIntro.7.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_42240[139:0]| ( Int) Bool)
(declare-fun |f[115:2][118:0][132:1]| ( Bool  Int  Bool  Int) Bool)
(declare-fun |app[105:5][113:2][120:0][130:1]| ( Bool  Int  Bool  Int  Bool  Bool  Int  Bool  Int) Bool)
(declare-fun |f[115:1]| ( Bool  Int) Bool)
(declare-fun |app[108:5][111:2][122:0][128:1]| ( Bool  Int  Bool  Int  Bool  Bool  Int  Bool  Int) Bool)
(declare-fun |app[105:5][113:1]| ( Bool  Int  Bool  Int  Bool  Bool  Int) Bool)
(declare-fun |app[108:5][111:1]| ( Bool  Int  Bool  Int  Bool  Bool  Int) Bool)
(declare-fun |app[108:9]| ( Bool  Int  Bool  Int  Bool  Bool  Int  Bool  Int) Bool)
(declare-fun |app[105:9]| ( Bool  Int  Bool  Int  Bool  Bool  Int  Bool  Int) Bool)
(declare-fun |f[87:2][95:0][101:1]| ( Bool  Int  Bool  Int) Bool)
(declare-fun |f[87:1]| ( Bool  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_42240[139:0]| x0))))
(assert (forall ((x0 Int)(var147 Int)(var146 Bool)(x1 Int)) (=> (and (|f[115:1]| var146 var147) (and (|f[115:2][118:0][132:1]| var146 var147 true x1) (<= var147 0))) (|fail_42240[139:0]| x0))))
(assert (forall ((x5 Bool)(x6 Int)(x3 Bool)(x4 Int)(x0 Int)(x2 Bool)(x1 Int)) (=> (and (|app[105:5][113:1]| x2 x1 x2 0 x2 x5 x6) (and (|app[105:5][113:2][120:0][130:1]| x2 x1 x2 0 x2 x5 x6 x3 x4) (and (|f[115:1]| x5 x6) (and (|f[87:1]| x2 x0) (>= x0 1))))) (|f[115:2][118:0][132:1]| x5 x6 x3 x4))))
(assert (forall ((x7 Bool)(x8 Int)(x9 Bool)(x10 Int)(x11 Bool)(x12 Bool)(x13 Int)(x5 Bool)(x6 Int)(x3 Int)(x0 Bool)(x1 Int)(x4 Bool)(x2 Int)) (=> (and (|app[105:9]| x7 x8 x9 x10 x11 x0 x1 x4 x2) (and (|app[108:5][111:1]| x4 x3 x4 0 x4 x12 x13) (and (|app[108:5][111:2][122:0][128:1]| x4 x3 x4 0 x4 x12 x13 x5 x6) (and (|app[105:5][113:1]| x7 x8 x9 x10 x11 x12 x13) (and (= (+ 1 x3) x8) (>= x8 0)))))) (|app[105:5][113:2][120:0][130:1]| x7 x8 x9 x10 x11 x12 x13 x5 x6))))
(assert (forall ((x4 Bool)(x5 Int)(x6 Bool)(x7 Int)(x8 Bool)(x9 Bool)(x10 Int)(x2 Bool)(x3 Int)(x1 Bool)(x0 Int)) (=> (and (|app[108:5][111:1]| x4 x5 x6 x7 x8 x9 x10) (and (|app[108:9]| x4 x5 x6 x7 x8 x1 x10 x9 x0) (and (<= (+ 1 x5) 0) (= x2 x9)))) (|app[108:5][111:2][122:0][128:1]| x4 x5 x6 x7 x8 x9 x10 x2 x3))))
(assert (forall ((x3 Bool)(x4 Int)(x0 Int)(x2 Bool)(x1 Int)) (=> (and (|app[105:5][113:1]| x2 x1 x2 0 x2 x3 x4) (and (|f[87:1]| x2 x0) (>= x0 1))) (|f[115:1]| x3 x4))))
(assert (forall ((x0 Bool)(x1 Int)(x2 Bool)(x3 Int)(x4 Bool)(x10 Bool)(x11 Int)(x8 Int)(x5 Bool)(x6 Int)(x9 Bool)(x7 Int)) (=> (and (|app[105:9]| x0 x1 x2 x3 x4 x5 x6 x9 x7) (and (|app[108:5][111:1]| x9 x8 x9 0 x9 x10 x11) (and (= (+ 1 x8) x1) (>= x1 0)))) (|app[105:5][113:1]| x0 x1 x2 x3 x4 x10 x11))))
(assert (forall ((x0 Bool)(x1 Int)(x2 Bool)(x3 Int)(x4 Bool)(x7 Bool)(x6 Int)(x5 Bool)(x8 Int)) (=> (and (|app[108:9]| x0 x1 x2 x3 x4 x5 x6 x7 x8) (<= (+ 1 x1) 0)) (|app[108:5][111:1]| x0 x1 x2 x3 x4 x7 x6))))
(assert (forall ((x13 Bool)(x1 Int)(x2 Bool)(x0 Int)(x3 Bool)(x4 Bool)(x12 Int)(x5 Bool)(x14 Int)(x7 Int)(x6 Bool)(x8 Bool)(x9 Int)(x10 Bool)(x11 Bool)) (=> (and (|app[105:9]| x6 x7 x8 x9 x10 x11 x12 x13 x14) (and (= x0 0) (and (= (+ 1 x1) x7) (and (>= x7 0) (and (= x13 x2) (and (= x13 x3) (and (= x13 x4) (= x13 x5)))))))) (|app[108:9]| x13 x1 x2 x0 x3 x4 x12 x5 x14))))
(assert (forall ((x6 Bool)(x5 Int)(x2 Bool)(x0 Int)(x3 Bool)(x4 Bool)(x1 Int)(x8 Bool)(x9 Int)(x7 Int)) (=> (and (|f[87:1]| x6 x7) (and (|f[87:2][95:0][101:1]| x6 x7 x8 x9) (and (= x0 0) (and (= (+ 1 x1) x7) (and (>= x7 1) (and (= x2 x3) (and (= x2 x6) (= x2 x4)))))))) (|app[105:9]| x6 x5 x2 x0 x3 x4 x1 x8 x9))))
(assert (forall ((x3 Bool)(x4 Int)(x1 Bool)(x2 Int)) (=> (and (|f[87:1]| x3 x4) (and (not x3) (not x1))) (|f[87:2][95:0][101:1]| x3 x4 x1 x2))))
(assert (forall ((x0 Bool)(x2 Int)) (=> (not x0) (|f[87:1]| x0 x2))))
(check-sat)
(get-model)
(exit)
