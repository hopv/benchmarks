(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/fpice/inductive3-2.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_12[78:0]| ( Int) Bool)
(declare-fun |f[65:1][73:0]| ( Int  Int) Bool)
(declare-fun |f[65:0]| ( Int) Bool)
(declare-fun |f[52:1][60:0]| ( Int  Int) Bool)
(declare-fun |f[52:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_12[78:0]| x0))))
(assert (forall ((x0 Int)(x3 Int)(x1 Int)(x2 Int)) (=> (and (|f[65:1][73:0]| x1 x3) (and (|f[52:1][60:0]| 0 x2) (and (<= (+ 1 x3) 0) (>= x1 2)))) (|fail_12[78:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)) (=> (and (|f[65:0]| x1) (and (<= x1 1) (and (>= (+ 1 x1) 0) (= (+ 1 x2) (* 2 x1))))) (|f[65:1][73:0]| x1 x2))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|f[52:1][60:0]| 0 x1) (>= x0 2)) (|f[65:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)) (=> (and (|f[52:0]| x1) (and (<= x1 1) (and (>= (+ 1 x1) 0) (= (+ 1 x2) (* 2 x1))))) (|f[52:1][60:0]| x1 x2))))
(assert (forall ((x0 Int)) (=> (= x0 0) (|f[52:0]| x0))))
(check-sat)
(get-model)
(exit)
