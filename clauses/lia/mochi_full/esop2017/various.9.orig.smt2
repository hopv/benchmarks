(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/esop2017/various.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_33[425:0]| ( Int) Bool)
(declare-fun |sum[408:2][420:0]| ( Int  Int  Int) Bool)
(declare-fun |sum[411:2][414:0]| ( Int  Int  Int) Bool)
(declare-fun |sum[411:1]| ( Int  Int) Bool)
(declare-fun |sum[408:1]| ( Int  Int) Bool)
(declare-fun |main_20[406:0]| ( Int) Bool)
(declare-fun |mult[389:3][401:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |mult[392:3][395:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |mult[392:2]| ( Int  Int  Int) Bool)
(declare-fun |mult[389:2]| ( Int  Int  Int) Bool)
(declare-fun |mc91[373:2][376:0]| ( Int  Int  Int) Bool)
(declare-fun |mc91[373:1]| ( Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_33[425:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|main_20[406:0]| x1) (and (|sum[408:2][420:0]| x1 x1 x2) (>= x1 (+ 1 x2)))) (|fail_33[425:0]| x0))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)(var602 Int)(var601 Int)) (=> (and (|sum[408:1]| x1 x0) (and (|sum[411:2][414:0]| x1 var601 var602) (and (= x2 (+ x0 var602)) (and (>= x0 1) (= (+ 1 var601) x0))))) (|sum[408:2][420:0]| x1 x0 x2))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|sum[411:1]| x1 x2) (and (= x0 0) (<= x2 0))) (|sum[411:2][414:0]| x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)) (=> (and (|sum[408:1]| x1 x2) (and (= (+ 1 x0) x2) (>= x2 1))) (|sum[411:1]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|main_20[406:0]| x1) (= x1 x0)) (|sum[408:1]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|mult[389:3][401:0]| x0 x0 x0 x1) (and (|mc91[373:2][376:0]| x0 x0 91) (and (<= x0 x1) (<= x0 101)))) (|main_20[406:0]| x0))))
(assert (forall ((x2 Int)(x1 Int)(x0 Int)(x3 Int)(var604 Int)(var603 Int)) (=> (and (|mult[389:2]| x2 x1 x0) (and (|mult[392:3][395:0]| x2 x1 var603 var604) (and (= x3 (+ x1 var604)) (and (>= x1 1) (and (>= x0 1) (= (+ 1 var603) x0)))))) (|mult[389:3][401:0]| x2 x1 x0 x3))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|mult[392:2]| x1 x2 x3) (and (= x0 0) (or (<= x2 0) (<= x3 0)))) (|mult[392:3][395:0]| x1 x2 x3 x0))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)(x3 Int)) (=> (and (|mult[389:2]| x1 x2 x3) (and (= (+ 1 x0) x3) (and (>= x2 1) (>= x3 1)))) (|mult[392:2]| x1 x2 x0))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|mc91[373:2][376:0]| x2 x2 91) (and (<= x2 101) (and (= x0 x2) (= x0 x1)))) (|mult[389:2]| x2 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|mc91[373:1]| x1 x2) (and (= (+ 10 x0) x2) (>= x2 101))) (|mc91[373:2][376:0]| x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (<= x1 101) (= x1 x0)) (|mc91[373:1]| x1 x0))))
(check-sat)
(get-model)
(exit)
