(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/esop2017/sum_add.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_14[0:0]| ( Int) Bool)
(declare-fun |add[0:2][0:0]| ( Int  Int  Int) Bool)
(declare-fun |add[0:1]| ( Int  Int) Bool)
(declare-fun |sum[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |sum[0:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_14[0:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|sum[0:1][0:0]| x1 x2) (>= 0 (+ 1 x2))) (|fail_14[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(var35 Int)(var36 Int)) (=> (and (|add[0:2][0:0]| x0 var36 x1) (and (|sum[0:0]| x0) (and (|sum[0:1][0:0]| var35 var36) (and (>= x0 1) (= (+ 1 var35) x0))))) (|sum[0:1][0:0]| x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|add[0:1]| x1 x2) (and (<= x2 0) (= x0 x1))) (|add[0:2][0:0]| x1 x2 x0))))
(assert (forall ((x0 Int)(x1 Int)(var37 Int)) (=> (and (|sum[0:0]| x0) (and (|sum[0:1][0:0]| var37 x1) (and (>= x0 1) (= (+ 1 var37) x0)))) (|add[0:1]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|sum[0:0]| x1) (and (= x0 0) (<= x1 0))) (|sum[0:1][0:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|sum[0:0]| x1) (and (= (+ 1 x0) x1) (>= x1 1))) (|sum[0:0]| x0))))
(assert (forall ((x0 Int)) (|sum[0:0]| x0)))
(check-sat)
(get-model)
(exit)
