(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/esop2017/colwheel.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_168[96:0]| ( Int) Bool)
(declare-fun |nround[91:4]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |k_rgb_of_hsb_58[89:4]| ( Int  Int  Int  Int) Bool)
(declare-fun |for_48[71:3]| ( Int  Int  Int  Int) Bool)
(declare-fun |for[59:1]| ( Int  Int) Bool)
(declare-fun |wheels[57:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_168[96:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)) (=> (|nround[91:4]| x1 x2 x3 x4 0) (|fail_168[96:0]| x0))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)(x5 Int)) (=> (and (|k_rgb_of_hsb_58[89:4]| x2 x3 x4 x5) (and (= x0 255) (= x1 (* 255 x5)))) (|nround[91:4]| x2 x3 x4 x1 x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)(var26 Int)(var25 Int)) (=> (and (|for_48[71:3]| var25 x2 x3 var26) (and (<= var26 23) (and (= x0 (div (* x3 (- 255 (div (* x2 (- (* x1 6) (* (div (* x1 6) 255) 255))) 255))) 255)) (and (not (= (div (* (div (* x1 6) 255) 255) 255) 4)) (and (not (= (div (* (div (* x1 6) 255) 255) 255) 3)) (and (not (= (div (* (div (* x1 6) 255) 255) 255) 2)) (and (not (= (div (* (div (* x1 6) 255) 255) 255) 1)) (and (not (= (div (* (div (* x1 6) 255) 255) 255) 0)) (and (not (= (div (* (div (* x1 6) 255) 255) 255) 6)) (= x1 (div (* var26 255) 24))))))))))) (|k_rgb_of_hsb_58[89:4]| x1 x2 x3 x0))))
(assert (forall ((x3 Int)(x1 Int)(x2 Int)(x0 Int)(var28 Int)(var27 Int)) (=> (and (|for[59:1]| x2 var28) (and (= x0 0) (and (>= var28 1) (and (= x1 (div (* var28 255) 8)) (= x3 (* var28 (div var27 20))))))) (|for_48[71:3]| x3 x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|wheels[57:0]| x1) (= x0 8)) (|for[59:1]| x1 x0))))
(assert (forall ((x0 Int)) (=> (= x0 255) (|wheels[57:0]| x0))))
(check-sat)
(get-model)
(exit)
