(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/iter.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_23[448:0]| ( Int) Bool)
(declare-fun |iter[285:0][443:0]| ( Int) Bool)
(declare-fun |iter[343:0][433:0]| ( Int) Bool)
(declare-fun |iter[343:2][351:1][419:0]| ( Int  Int  Int) Bool)
(declare-fun |iter[285:2][365:1][405:0]| ( Int  Int  Int) Bool)
(declare-fun |make_list[260:1][281:1][369:1][401:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[263:1][275:1][380:1][391:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[263:1][275:1][380:0]| ( Int  Int  Int) Bool)
(declare-fun |make_list[260:1][281:1][369:0]| ( Int  Int  Int) Bool)
(declare-fun |iter[285:2][365:0]| ( Int  Int) Bool)
(declare-fun |iter[343:2][351:0]| ( Int  Int) Bool)
(declare-fun |iter[343:1]| ( Int) Bool)
(declare-fun |iter[285:0][326:1][333:0]| ( Int  Int) Bool)
(declare-fun |iter[285:0][326:0]| ( Int) Bool)
(declare-fun |iter[285:2][293:1][312:0]| ( Int  Int  Int) Bool)
(declare-fun |make_list[260:1][281:1][297:1][308:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[260:1][281:1][297:0]| ( Int  Int  Int) Bool)
(declare-fun |iter[285:2][293:0]| ( Int  Int) Bool)
(declare-fun |iter[285:1]| ( Int) Bool)
(declare-fun |make_list[260:1][281:0]| ( Int  Int) Bool)
(declare-fun |make_list[263:1][275:0]| ( Int  Int) Bool)
(declare-fun |make_list[266:1][269:0]| ( Int  Int) Bool)
(declare-fun |make_list[266:0]| ( Int) Bool)
(declare-fun |make_list[263:0]| ( Int) Bool)
(declare-fun |make_list[260:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_23[448:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(var435 Int)(var436 Int)) (=> (and (|iter[285:0][443:0]| x1) (and (|make_list[260:1][281:0]| var435 var436) (<= (+ 1 x1) 0))) (|fail_23[448:0]| x0))))
(assert (forall ((x2 Int)(var437 Int)(var438 Int)(var439 Int)) (=> (and (|iter[285:2][293:1][312:0]| var437 0 var438) (and (|iter[285:1]| var437) (and (|iter[285:0][326:1][333:0]| var438 var439) (and (|iter[343:0][433:0]| x2) (<= 1 var437))))) (|iter[285:0][443:0]| x2))))
(assert (forall ((x2 Int)(var440 Int)) (=> (and (|iter[343:2][351:1][419:0]| var440 0 x2) (and (|iter[343:1]| var440) (<= 1 var440))) (|iter[343:0][433:0]| x2))))
(assert (forall ((x5 Int)(x3 Int)(x4 Int)(var441 Int)(x2 Int)(var443 Int)(x1 Int)(x0 Int)) (=> (and (|iter[285:0][326:1][333:0]| x1 x0) (and (|iter[343:2][351:0]| var441 x3) (and (|iter[285:2][365:1][405:0]| x2 var443 x4) (and (|iter[285:2][293:1][312:0]| x2 0 x1) (and (|iter[285:1]| x2) (and (|iter[343:1]| x5) (and (= (+ 1 var441) x2) (and (= (+ 1 x5) x2) (and (>= x2 1) (= var443 (+ 1 x3))))))))))) (|iter[343:2][351:1][419:0]| x5 x3 x4))))
(assert (forall ((x3 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|iter[285:1]| x3) (and (|make_list[260:1][281:1][369:1][401:0]| x0 x3 x1 x2) (|make_list[260:1][281:0]| x0 x3))) (|iter[285:2][365:1][405:0]| x3 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var446 Int)(var448 Int)(var447 Int)(var449 Int)) (=> (and (|make_list[260:1][281:1][369:0]| x2 var446 x0) (and (|make_list[263:1][275:0]| var447 var448) (and (|make_list[263:1][275:1][380:1][391:0]| var447 var448 var449 x1) (and (|make_list[260:1][281:0]| x2 x3) (and (|make_list[260:0]| x2) (and (= var446 (+ 1 var448)) (and (= x3 (+ 1 var448)) (and (= (+ 1 var447) x2) (and (= (+ 1 var449) x0) (and (not (= x0 0)) (>= x2 0))))))))))) (|make_list[260:1][281:1][369:1][401:0]| x2 x3 x0 x1))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var452 Int)(var454 Int)(var453 Int)) (=> (and (|make_list[263:1][275:1][380:0]| x2 var452 x0) (and (|make_list[266:1][269:0]| var453 var454) (and (|make_list[263:1][275:0]| x2 x3) (and (|make_list[263:0]| x2) (and (= var452 (+ 1 var454)) (and (= x3 (+ 1 var454)) (and (= (+ 1 var453) x2) (and (= x0 0) (and (>= x2 0) (= x1 x2)))))))))) (|make_list[263:1][275:1][380:1][391:0]| x2 x3 x0 x1))))
(assert (forall ((x3 Int)(x1 Int)(x2 Int)(x0 Int)(var456 Int)(var455 Int)(var457 Int)) (=> (and (|make_list[263:0]| x3) (and (|make_list[260:1][281:1][369:0]| x0 var455 var456) (and (|make_list[263:1][275:0]| var457 x1) (and (|make_list[260:0]| x0) (and (= (+ 1 x3) x0) (and (= (+ 1 x2) var456) (and (not (= var456 0)) (and (= var455 (+ 1 x1)) (and (= (+ 1 var457) x0) (>= x0 0)))))))))) (|make_list[263:1][275:1][380:0]| x3 x1 x2))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|make_list[260:0]| x2) (and (|iter[285:2][365:0]| x0 x1) (|make_list[260:1][281:0]| x2 x0))) (|make_list[260:1][281:1][369:0]| x2 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(var458 Int)(var459 Int)(var460 Int)(var461 Int)) (=> (and (|iter[343:2][351:0]| var458 var459) (and (|iter[285:2][293:1][312:0]| x1 0 var460) (and (|iter[285:1]| x1) (and (|iter[285:0][326:1][333:0]| var460 var461) (and (<= 1 x1) (and (= (+ 1 var458) x1) (= x2 (+ 1 var459)))))))) (|iter[285:2][365:0]| x1 x2))))
(assert (forall ((x1 Int)(x2 Int)) (=> (and (|iter[343:1]| x1) (and (= x2 0) (<= 1 x1))) (|iter[343:2][351:0]| x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)(x3 Int)) (=> (and (|iter[285:2][293:1][312:0]| x2 0 x0) (and (|iter[285:1]| x2) (and (|iter[285:0][326:1][333:0]| x0 x3) (and (= (+ 1 x1) x2) (>= x2 1))))) (|iter[343:1]| x1))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)) (=> (and (|make_list[260:1][281:0]| x0 x1) (and (|iter[285:0][326:0]| x2) (>= x2 0))) (|iter[285:0][326:1][333:0]| x2 x3))))
(assert (forall ((x2 Int)(var464 Int)) (=> (and (|iter[285:2][293:1][312:0]| var464 0 x2) (and (|iter[285:1]| var464) (<= 1 var464))) (|iter[285:0][326:0]| x2))))
(assert (forall ((x3 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|iter[285:1]| x3) (and (|make_list[260:1][281:1][297:1][308:0]| x0 x3 x1 x2) (|make_list[260:1][281:0]| x0 x3))) (|iter[285:2][293:1][312:0]| x3 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var467 Int)(var469 Int)(var468 Int)) (=> (and (|make_list[260:1][281:1][297:0]| x2 var467 x0) (and (|make_list[263:1][275:0]| var468 var469) (and (|make_list[260:1][281:0]| x2 x3) (and (|make_list[260:0]| x2) (and (= var467 (+ 1 var469)) (and (= x3 (+ 1 var469)) (and (= (+ 1 var468) x2) (and (= x0 0) (and (>= x2 0) (= x1 x2)))))))))) (|make_list[260:1][281:1][297:1][308:0]| x2 x3 x0 x1))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|make_list[260:0]| x2) (and (|iter[285:2][293:0]| x0 x1) (|make_list[260:1][281:0]| x2 x0))) (|make_list[260:1][281:1][297:0]| x2 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)) (=> (and (|iter[285:1]| x1) (and (= x2 0) (<= 1 x1))) (|iter[285:2][293:0]| x1 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (|make_list[260:1][281:0]| x0 x1) (|iter[285:1]| x1))))
(assert (forall ((x0 Int)(x1 Int)(var471 Int)(var470 Int)) (=> (and (|make_list[260:0]| x0) (and (|make_list[263:1][275:0]| var470 var471) (and (= x1 (+ 1 var471)) (and (>= x0 0) (= (+ 1 var470) x0))))) (|make_list[260:1][281:0]| x0 x1))))
(assert (forall ((x0 Int)(x1 Int)(var473 Int)(var472 Int)) (=> (and (|make_list[263:0]| x0) (and (|make_list[266:1][269:0]| var472 var473) (and (= x1 (+ 1 var473)) (and (>= x0 0) (= (+ 1 var472) x0))))) (|make_list[263:1][275:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[266:0]| x1) (and (= x0 0) (<= (+ 1 x1) 0))) (|make_list[266:1][269:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_list[263:0]| x1) (and (= (+ 1 x0) x1) (>= x1 0))) (|make_list[266:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_list[260:0]| x1) (and (= (+ 1 x0) x1) (>= x1 0))) (|make_list[263:0]| x0))))
(assert (forall ((x0 Int)) (|make_list[260:0]| x0)))
(check-sat)
(get-model)
(exit)
