(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/mem.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_35[0:0]| ( Int) Bool)
(declare-fun |mem[0:3][0:0]| ( Int  Int  Bool) Bool)
(declare-fun |mem[0:1]| ( Int  Int) Bool)
(declare-fun |make_list[0:2][0:0]| ( Int  Int  Int) Bool)
(declare-fun |make_list[0:1]| ( Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_35[0:0]| x0))))
(assert (forall ((x0 Int)(x3 Int)(x2 Int)(x1 Int)) (=> (and (|mem[0:3][0:0]| x2 x3 false) (and (|make_list[0:2][0:0]| x1 x2 x3) (>= x3 1))) (|fail_35[0:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(x0 Bool)) (=> (and (|mem[0:1]| x1 x2) (and (<= x2 0) (not x0))) (|mem[0:3][0:0]| x1 x2 x0))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|make_list[0:2][0:0]| x0 x1 x2) (>= x2 1)) (|mem[0:1]| x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|make_list[0:1]| x1 x2) (and (= x0 0) (<= (+ 1 x1) 0))) (|make_list[0:2][0:0]| x1 x2 x0))))
(assert (forall ((x0 Int)(x1 Int)) (|make_list[0:1]| x0 x1)))
(check-sat)
(get-model)
(exit)
