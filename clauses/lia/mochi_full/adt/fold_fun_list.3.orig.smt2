(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/fold_fun_list.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_35[364:0]| ( Int) Bool)
(declare-fun |fold_right[131:4][181:0][187:1][357:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_right[131:0][205:3][339:0]| ( Int  Int) Bool)
(declare-fun |fold_right[131:0][205:0][271:1][329:0]| ( Int  Int) Bool)
(declare-fun |fold_right[131:2][139:1][158:0][289:1][311:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[115:1][127:1][143:1][154:0][293:1][307:0]| ( Int  Int  Int  Int  Int) Bool)
(declare-fun |make_list[115:1][127:1][143:1][154:0][293:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[115:1][127:1][143:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_right[131:2][139:1][158:0][289:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_right[131:0][205:0][271:0]| ( Int) Bool)
(declare-fun |fold_right[131:0][205:1][211:1][261:0]| ( Int  Int) Bool)
(declare-fun |fold_right[166:4][169:0][223:1][249:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_right[166:3][225:1][247:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_right[131:3][233:1][239:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_right[131:3][233:0]| ( Int  Int) Bool)
(declare-fun |fold_right[166:3][225:0]| ( Int  Int) Bool)
(declare-fun |fold_right[166:4][169:0][223:0]| ( Int  Int) Bool)
(declare-fun |fold_right[166:1]| ( Int) Bool)
(declare-fun |fold_right[131:0][205:1][211:0]| ( Int) Bool)
(declare-fun |fold_right[131:0][205:2]| ( Int) Bool)
(declare-fun |fold_right[131:4][181:0][187:0]| ( Int  Int) Bool)
(declare-fun |fold_right[131:2][139:0]| ( Int  Int) Bool)
(declare-fun |fold_right[131:1]| ( Int) Bool)
(declare-fun |make_list[115:1][127:0]| ( Int  Int) Bool)
(declare-fun |make_list[118:1][121:0]| ( Int  Int) Bool)
(declare-fun |make_list[118:0]| ( Int) Bool)
(declare-fun |make_list[115:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_35[364:0]| x0))))
(assert (forall ((x0 Int)(x3 Int)(x2 Int)(x1 Int)) (=> (and (|fold_right[131:4][181:0][187:1][357:0]| x2 0 x3) (and (|make_list[115:1][127:0]| x1 x2) (<= (+ 1 x3) 0))) (|fail_35[364:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)) (=> (and (|fold_right[131:0][205:3][339:0]| x2 x3) (and (|fold_right[131:1]| x1) (<= 1 x1))) (|fold_right[131:4][181:0][187:1][357:0]| x1 x2 x3))))
(assert (forall ((x2 Int)(x3 Int)(var599 Int)(x0 Int)(x1 Int)) (=> (and (|fold_right[131:0][205:1][211:1][261:0]| x2 var599) (and (|fold_right[131:0][205:0][271:1][329:0]| var599 x3) (and (|make_list[115:1][127:0]| x0 x1) (|fold_right[131:0][205:2]| x2)))) (|fold_right[131:0][205:3][339:0]| x2 x3))))
(assert (forall ((x2 Int)(x3 Int)(var602 Int)) (=> (and (|fold_right[131:2][139:1][158:0][289:1][311:0]| var602 0 x2 x3) (and (|fold_right[131:1]| var602) (<= 1 var602))) (|fold_right[131:0][205:0][271:1][329:0]| x2 x3))))
(assert (forall ((x4 Int)(x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|fold_right[131:1]| x4) (and (|make_list[115:1][127:1][143:1][154:0][293:1][307:0]| x0 x4 x1 x2 x3) (|make_list[115:1][127:0]| x0 x4))) (|fold_right[131:2][139:1][158:0][289:1][311:0]| x4 x1 x2 x3))))
(assert (forall ((x3 Int)(x4 Int)(x0 Int)(x1 Int)(x2 Int)(var605 Int)(var607 Int)(var606 Int)) (=> (and (|make_list[115:1][127:1][143:1][154:0][293:0]| x3 var605 x0 x1) (and (|make_list[115:1][127:1][143:0]| x3 var605 x0) (and (|make_list[118:1][121:0]| var606 var607) (and (|make_list[115:1][127:0]| x3 x4) (and (|make_list[115:0]| x3) (and (= var605 (+ 1 var607)) (and (= x4 (+ 1 var607)) (and (= (+ 1 var606) x3) (and (= x0 0) (and (= x2 (+ x3 x1)) (>= x3 1))))))))))) (|make_list[115:1][127:1][143:1][154:0][293:1][307:0]| x3 x4 x0 x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|make_list[115:0]| x1) (and (|make_list[115:1][127:1][143:0]| x1 x2 x3) (and (|fold_right[131:2][139:1][158:0][289:0]| x2 x3 x0) (and (|fold_right[131:2][139:0]| x2 x3) (|make_list[115:1][127:0]| x1 x2))))) (|make_list[115:1][127:1][143:1][154:0][293:0]| x1 x2 x3 x0))))
(assert (forall ((x2 Int)(x3 Int)(x1 Int)) (=> (and (|fold_right[131:2][139:0]| x2 x3) (and (|fold_right[131:0][205:0][271:0]| x1) (and (|fold_right[131:1]| x2) (and (= x3 0) (<= 1 x2))))) (|fold_right[131:2][139:1][158:0][289:0]| x2 x3 x1))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(var610 Int)) (=> (and (|make_list[115:1][127:0]| x0 x1) (and (|fold_right[131:0][205:2]| var610) (|fold_right[131:0][205:1][211:1][261:0]| var610 x2))) (|fold_right[131:0][205:0][271:0]| x2))))
(assert (forall ((x2 Int)(x3 Int)(var611 Int)(var612 Int)) (=> (and (|fold_right[166:4][169:0][223:1][249:0]| var611 x2 x3) (and (|fold_right[131:1]| var612) (and (= (+ 1 var611) var612) (<= 1 var612)))) (|fold_right[131:0][205:1][211:1][261:0]| x2 x3))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|fold_right[166:1]| x0) (and (|fold_right[166:3][225:1][247:0]| x0 x1 x2) (<= x0 0))) (|fold_right[166:4][169:0][223:1][249:0]| x0 x1 x2))))
(assert (forall ((x3 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|fold_right[166:1]| x3) (and (|fold_right[131:3][233:1][239:0]| x0 x1 x2) (and (|fold_right[131:1]| x0) (and (= (+ 1 x3) x0) (>= x0 1))))) (|fold_right[166:3][225:1][247:0]| x3 x1 x2))))
(assert (forall ((x3 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|fold_right[131:1]| x3) (and (|fold_right[131:3][233:0]| x3 x1) (and (|make_list[115:1][127:0]| x0 x3) (= x2 x1)))) (|fold_right[131:3][233:1][239:0]| x3 x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(var613 Int)) (=> (and (|fold_right[166:3][225:0]| var613 x2) (and (|fold_right[131:1]| x1) (and (<= 1 x1) (= (+ 1 var613) x1)))) (|fold_right[131:3][233:0]| x1 x2))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|fold_right[166:1]| x0) (and (|fold_right[166:4][169:0][223:0]| x0 x1) (<= x0 0))) (|fold_right[166:3][225:0]| x0 x1))))
(assert (forall ((x2 Int)(x1 Int)(x0 Int)) (=> (and (|fold_right[166:1]| x2) (and (|fold_right[131:0][205:1][211:0]| x1) (and (|fold_right[131:1]| x0) (and (= (+ 1 x2) x0) (>= x0 1))))) (|fold_right[166:4][169:0][223:0]| x2 x1))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|make_list[115:1][127:0]| x0 x1) (|fold_right[131:0][205:2]| x2)) (|fold_right[131:0][205:1][211:0]| x2))))
(assert (forall ((x2 Int)(var616 Int)) (=> (and (|fold_right[131:4][181:0][187:0]| var616 x2) (and (|fold_right[131:1]| var616) (<= 1 var616))) (|fold_right[131:0][205:2]| x2))))
(assert (forall ((x2 Int)(x1 Int)(x0 Int)) (=> (and (|fold_right[131:1]| x2) (and (|make_list[115:1][127:0]| x0 x2) (= x1 0))) (|fold_right[131:4][181:0][187:0]| x2 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|fold_right[131:1]| x0) (and (= (+ 1 x1) x0) (>= x0 1))) (|fold_right[166:1]| x1))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|make_list[115:0]| x2) (and (|fold_right[131:2][139:0]| x0 x1) (|make_list[115:1][127:0]| x2 x0))) (|make_list[115:1][127:1][143:0]| x2 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)) (=> (and (|fold_right[131:1]| x1) (and (= x2 0) (<= 1 x1))) (|fold_right[131:2][139:0]| x1 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (|make_list[115:1][127:0]| x0 x1) (|fold_right[131:1]| x1))))
(assert (forall ((x0 Int)(x1 Int)(var618 Int)(var617 Int)) (=> (and (|make_list[115:0]| x0) (and (|make_list[118:1][121:0]| var617 var618) (and (= x1 (+ 1 var618)) (and (>= x0 1) (= (+ 1 var617) x0))))) (|make_list[115:1][127:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[118:0]| x1) (and (= x0 0) (<= x1 0))) (|make_list[118:1][121:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_list[115:0]| x1) (and (= (+ 1 x0) x1) (>= x1 1))) (|make_list[118:0]| x0))))
(assert (forall ((x0 Int)) (|make_list[115:0]| x0)))
(check-sat)
(get-model)
(exit)
