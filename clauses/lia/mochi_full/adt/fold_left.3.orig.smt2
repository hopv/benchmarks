(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/fold_left.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_28[373:0]| ( Int) Bool)
(declare-fun |fold_left[183:4][368:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[240:4][358:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[345:4][348:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[345:2]| ( Int  Int) Bool)
(declare-fun |fold_left[240:0][309:2][335:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[183:0][319:2][325:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[183:0][319:1]| ( Int  Int) Bool)
(declare-fun |fold_left[240:0][309:1]| ( Int  Int) Bool)
(declare-fun |fold_left[240:3][248:1][295:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |fold_left[183:3][262:1][281:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[167:1][179:1][266:1][277:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[167:1][179:1][266:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[183:3][262:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[240:3][248:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[240:2]| ( Int  Int) Bool)
(declare-fun |fold_left[183:0][224:2][230:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[183:0][224:1]| ( Int  Int) Bool)
(declare-fun |fold_left[183:3][191:1][210:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[167:1][179:1][195:1][206:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[167:1][179:1][195:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[183:3][191:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_left[183:2]| ( Int  Int) Bool)
(declare-fun |make_list[167:1][179:0]| ( Int  Int) Bool)
(declare-fun |make_list[170:1][173:0]| ( Int  Int) Bool)
(declare-fun |make_list[170:0]| ( Int) Bool)
(declare-fun |make_list[167:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_28[373:0]| x0))))
(assert (forall ((x0 Int)(x4 Int)(x2 Int)(x3 Int)(x1 Int)) (=> (and (|fold_left[183:4][368:0]| x2 x3 x4) (and (|make_list[167:1][179:0]| x1 x3) (<= (+ 1 x4) x2))) (|fail_28[373:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(var334 Int)(var336 Int)(var335 Int)) (=> (and (|fold_left[240:4][358:0]| var336 var334 x3) (and (|fold_left[183:3][191:1][210:0]| x1 x2 0 var335) (and (|fold_left[183:2]| x1 x2) (and (|fold_left[183:0][224:2][230:0]| x1 var335 var336) (and (<= 1 x2) (= (+ 1 var334) x2)))))) (|fold_left[183:4][368:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(var337 Int)(var339 Int)(var338 Int)) (=> (and (|fold_left[345:4][348:0]| var339 var337 x3) (and (|fold_left[240:3][248:1][295:0]| x1 x2 0 var338) (and (|fold_left[240:2]| x1 x2) (and (|fold_left[240:0][309:2][335:0]| x1 var338 var339) (and (<= 1 x2) (= (+ 1 var337) x2)))))) (|fold_left[240:4][358:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|fold_left[345:2]| x1 x2) (and (<= x2 0) (= x0 x1))) (|fold_left[345:4][348:0]| x1 x2 x0))))
(assert (forall ((x4 Int)(x2 Int)(x3 Int)(x0 Int)(x1 Int)) (=> (and (|fold_left[240:3][248:1][295:0]| x0 x3 0 x1) (and (|fold_left[240:2]| x0 x3) (and (|fold_left[240:0][309:2][335:0]| x0 x1 x4) (and (= (+ 1 x2) x3) (>= x3 1))))) (|fold_left[345:2]| x4 x2))))
(assert (forall ((x5 Int)(x6 Int)(x7 Int)(x4 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|fold_left[183:0][224:2][230:0]| x1 x2 x0) (and (|fold_left[183:3][191:1][210:0]| x1 x4 0 x2) (and (|fold_left[183:2]| x1 x4) (and (|fold_left[183:0][319:2][325:0]| x5 x6 x7) (>= x4 1))))) (|fold_left[240:0][309:2][335:0]| x5 x6 x7))))
(assert (forall ((x3 Int)(x4 Int)(x5 Int)(x0 Int)(x2 Int)) (=> (and (|make_list[167:1][179:0]| x0 x2) (and (|fold_left[183:0][319:1]| x3 x4) (= x5 (+ x3 x4)))) (|fold_left[183:0][319:2][325:0]| x3 x4 x5))))
(assert (forall ((x3 Int)(x4 Int)(var342 Int)(var343 Int)(var344 Int)(var345 Int)) (=> (and (|fold_left[183:3][191:1][210:0]| var343 var342 0 var344) (and (|fold_left[183:2]| var343 var342) (and (|fold_left[183:0][224:2][230:0]| var343 var344 var345) (and (|fold_left[240:0][309:1]| x3 x4) (<= 1 var342))))) (|fold_left[183:0][319:1]| x3 x4))))
(assert (forall ((x3 Int)(x4 Int)(var346 Int)) (=> (and (|fold_left[240:3][248:1][295:0]| x3 var346 0 x4) (and (|fold_left[240:2]| x3 var346) (<= 1 var346))) (|fold_left[240:0][309:1]| x3 x4))))
(assert (forall ((x5 Int)(x6 Int)(x3 Int)(x4 Int)(var347 Int)(x2 Int)(var349 Int)(var348 Int)(x0 Int)(x1 Int)) (=> (and (|fold_left[240:3][248:0]| var348 var347 x3) (and (|fold_left[183:0][224:2][230:0]| x0 x1 var348) (and (|fold_left[183:3][262:1][281:0]| x0 x2 var349 x4) (and (|fold_left[183:3][191:1][210:0]| x0 x2 0 x1) (and (|fold_left[183:2]| x0 x2) (and (|fold_left[240:2]| x5 x6) (and (|fold_left[183:0][224:2][230:0]| x0 x1 x5) (and (= (+ 1 var347) x2) (and (= (+ 1 x6) x2) (and (>= x2 1) (= var349 (+ 1 x3)))))))))))) (|fold_left[240:3][248:1][295:0]| x5 x6 x3 x4))))
(assert (forall ((x3 Int)(x4 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|fold_left[183:2]| x3 x4) (and (|make_list[167:1][179:1][266:1][277:0]| x0 x4 x1 x2) (|make_list[167:1][179:0]| x0 x4))) (|fold_left[183:3][262:1][281:0]| x3 x4 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var352 Int)(var354 Int)(var353 Int)) (=> (and (|make_list[167:1][179:1][266:0]| x2 var352 x0) (and (|make_list[170:1][173:0]| var353 var354) (and (|make_list[167:1][179:0]| x2 x3) (and (|make_list[167:0]| x2) (and (= var352 (+ 1 var354)) (and (= x3 (+ 1 var354)) (and (= (+ 1 var353) x2) (and (= x0 0) (and (>= x2 0) (= x1 x2)))))))))) (|make_list[167:1][179:1][266:1][277:0]| x2 x3 x0 x1))))
(assert (forall ((x3 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|make_list[167:0]| x3) (and (|fold_left[183:3][262:0]| x0 x1 x2) (|make_list[167:1][179:0]| x3 x1))) (|make_list[167:1][179:1][266:0]| x3 x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(var355 Int)(var356 Int)(var358 Int)(var357 Int)) (=> (and (|fold_left[240:3][248:0]| var358 var355 var356) (and (|fold_left[183:3][191:1][210:0]| x1 x2 0 var357) (and (|fold_left[183:2]| x1 x2) (and (|fold_left[183:0][224:2][230:0]| x1 var357 var358) (and (<= 1 x2) (and (= (+ 1 var355) x2) (= x3 (+ 1 var356)))))))) (|fold_left[183:3][262:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)) (=> (and (|fold_left[240:2]| x1 x2) (and (= x3 0) (<= 1 x2))) (|fold_left[240:3][248:0]| x1 x2 x3))))
(assert (forall ((x4 Int)(x2 Int)(x3 Int)(x0 Int)(x1 Int)) (=> (and (|fold_left[183:3][191:1][210:0]| x0 x3 0 x1) (and (|fold_left[183:2]| x0 x3) (and (|fold_left[183:0][224:2][230:0]| x0 x1 x4) (and (= (+ 1 x2) x3) (>= x3 1))))) (|fold_left[240:2]| x4 x2))))
(assert (forall ((x3 Int)(x4 Int)(x5 Int)(x0 Int)(x2 Int)) (=> (and (|make_list[167:1][179:0]| x0 x2) (and (|fold_left[183:0][224:1]| x3 x4) (= x5 (+ x3 x4)))) (|fold_left[183:0][224:2][230:0]| x3 x4 x5))))
(assert (forall ((x3 Int)(x4 Int)(var361 Int)) (=> (and (|fold_left[183:3][191:1][210:0]| x3 var361 0 x4) (and (|fold_left[183:2]| x3 var361) (<= 1 var361))) (|fold_left[183:0][224:1]| x3 x4))))
(assert (forall ((x3 Int)(x4 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|fold_left[183:2]| x3 x4) (and (|make_list[167:1][179:1][195:1][206:0]| x0 x4 x1 x2) (|make_list[167:1][179:0]| x0 x4))) (|fold_left[183:3][191:1][210:0]| x3 x4 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var364 Int)(var366 Int)(var365 Int)) (=> (and (|make_list[167:1][179:1][195:0]| x2 var364 x0) (and (|make_list[170:1][173:0]| var365 var366) (and (|make_list[167:1][179:0]| x2 x3) (and (|make_list[167:0]| x2) (and (= var364 (+ 1 var366)) (and (= x3 (+ 1 var366)) (and (= (+ 1 var365) x2) (and (= x0 0) (and (>= x2 0) (= x1 x2)))))))))) (|make_list[167:1][179:1][195:1][206:0]| x2 x3 x0 x1))))
(assert (forall ((x3 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|make_list[167:0]| x3) (and (|fold_left[183:3][191:0]| x0 x1 x2) (|make_list[167:1][179:0]| x3 x1))) (|make_list[167:1][179:1][195:0]| x3 x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)) (=> (and (|fold_left[183:2]| x1 x2) (and (= x3 0) (<= 1 x2))) (|fold_left[183:3][191:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (|make_list[167:1][179:0]| x0 x2) (|fold_left[183:2]| x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(var368 Int)(var367 Int)) (=> (and (|make_list[167:0]| x0) (and (|make_list[170:1][173:0]| var367 var368) (and (= x1 (+ 1 var368)) (and (>= x0 0) (= (+ 1 var367) x0))))) (|make_list[167:1][179:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[170:0]| x1) (and (= x0 0) (<= (+ 1 x1) 0))) (|make_list[170:1][173:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_list[167:0]| x1) (and (= (+ 1 x0) x1) (>= x1 0))) (|make_list[170:0]| x0))))
(assert (forall ((x0 Int)) (|make_list[167:0]| x0)))
(check-sat)
(get-model)
(exit)
