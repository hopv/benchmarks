(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/iter.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_23[0:0]| ( Int) Bool)
(declare-fun |iter[0:0][0:0]| ( Int) Bool)
(declare-fun |iter[0:2][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |make_list[0:1][0:1][0:1][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[0:1][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |iter[0:2][0:0]| ( Int  Int) Bool)
(declare-fun |iter[0:1]| ( Int) Bool)
(declare-fun |make_list[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |make_list[0:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_23[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(var16 Int)(var17 Int)) (=> (and (|iter[0:0][0:0]| x1) (and (|make_list[0:1][0:0]| var16 var17) (<= (+ 1 x1) 0))) (|fail_23[0:0]| x0))))
(assert (forall ((x2 Int)(var18 Int)) (=> (and (|iter[0:2][0:1][0:0]| var18 0 x2) (and (|iter[0:1]| var18) (<= 1 var18))) (|iter[0:0][0:0]| x2))))
(assert (forall ((x3 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|iter[0:1]| x3) (and (|make_list[0:1][0:1][0:1][0:0]| x0 x3 x1 x2) (|make_list[0:1][0:0]| x0 x3))) (|iter[0:2][0:1][0:0]| x3 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var21 Int)(var23 Int)(var22 Int)) (=> (and (|make_list[0:1][0:1][0:0]| x2 var21 x0) (and (|make_list[0:1][0:0]| var22 var23) (and (|make_list[0:1][0:0]| x2 x3) (and (|make_list[0:0]| x2) (and (= var21 (+ 1 var23)) (and (= x3 (+ 1 var23)) (and (= (+ 1 var22) x2) (and (= x0 0) (and (>= x2 0) (= x1 x2)))))))))) (|make_list[0:1][0:1][0:1][0:0]| x2 x3 x0 x1))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|make_list[0:0]| x2) (and (|iter[0:2][0:0]| x0 x1) (|make_list[0:1][0:0]| x2 x0))) (|make_list[0:1][0:1][0:0]| x2 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)) (=> (and (|iter[0:1]| x1) (and (= x2 0) (<= 1 x1))) (|iter[0:2][0:0]| x1 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (|make_list[0:1][0:0]| x0 x1) (|iter[0:1]| x1))))
(assert (forall ((x0 Int)(x1 Int)(var25 Int)(var24 Int)) (=> (and (|make_list[0:0]| x0) (and (|make_list[0:1][0:0]| var24 var25) (and (= x1 (+ 1 var25)) (and (>= x0 0) (= (+ 1 var24) x0))))) (|make_list[0:1][0:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[0:0]| x1) (and (= x0 0) (<= (+ 1 x1) 0))) (|make_list[0:1][0:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_list[0:0]| x1) (and (= (+ 1 x0) x1) (>= x1 0))) (|make_list[0:0]| x0))))
(assert (forall ((x0 Int)) (|make_list[0:0]| x0)))
(check-sat)
(get-model)
(exit)
