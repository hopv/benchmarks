(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/isort_geq.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_72[41:0]| ( Int) Bool)
(declare-fun |length[33:2][36:0]| ( Int  Int) Bool)
(declare-fun |length[33:0]| ( Int) Bool)
(declare-fun |length[26:2][29:0]| ( Int  Int) Bool)
(declare-fun |length[26:0]| ( Int) Bool)
(declare-fun |insertsort[19:2][22:0]| ( Int  Int) Bool)
(declare-fun |insertsort[19:0]| ( Int) Bool)
(declare-fun |make_list[12:1][15:0]| ( Int  Int) Bool)
(declare-fun |make_list[12:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_72[41:0]| x0))))
(assert (forall ((x0 Int)(x3 Int)(x5 Int)(x4 Int)(x2 Int)(x1 Int)) (=> (and (|length[33:2][36:0]| x4 x5) (and (|length[26:2][29:0]| x2 x3) (and (|insertsort[19:2][22:0]| x4 x2) (and (|make_list[12:1][15:0]| x1 x4) (<= (+ 1 x3) x5))))) (|fail_72[41:0]| x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[33:0]| x1) (and (= x0 0) (<= x1 0))) (|length[33:2][36:0]| x1 x0))))
(assert (forall ((x2 Int)(x1 Int)(x3 Int)(x0 Int)) (=> (and (|length[26:2][29:0]| x1 x3) (and (|insertsort[19:2][22:0]| x2 x1) (|make_list[12:1][15:0]| x0 x2))) (|length[33:0]| x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[26:0]| x1) (and (= x0 0) (<= x1 0))) (|length[26:2][29:0]| x1 x0))))
(assert (forall ((x2 Int)(x1 Int)(x0 Int)) (=> (and (|insertsort[19:2][22:0]| x1 x2) (|make_list[12:1][15:0]| x0 x1)) (|length[26:0]| x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|insertsort[19:0]| x1) (and (= x0 0) (<= x1 0))) (|insertsort[19:2][22:0]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (|make_list[12:1][15:0]| x0 x1) (|insertsort[19:0]| x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[12:0]| x1) (and (= x0 0) (= x1 0))) (|make_list[12:1][15:0]| x1 x0))))
(assert (forall ((x0 Int)) (|make_list[12:0]| x0)))
(check-sat)
(get-model)
(exit)
