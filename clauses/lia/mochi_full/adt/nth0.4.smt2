(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/nth0.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_27[0:0]| ( Int) Bool)
(declare-fun |nth[0:2][0:1][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[0:1][0:1][0:1][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |make_list[0:1][0:1][0:0]| ( Int  Int  Int) Bool)
(declare-fun |nth[0:2][0:0]| ( Int  Int  Int) Bool)
(declare-fun |nth[0:1]| ( Int  Int) Bool)
(declare-fun |make_list[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |make_list[0:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_27[0:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|nth[0:1]| x1 x2) (<= x2 0)) (|fail_27[0:0]| x0))))
(assert (forall ((x0 Int)(x4 Int)(x2 Int)(x3 Int)(x1 Int)) (=> (and (|nth[0:2][0:1][0:0]| x2 x3 0 x1) (and (|nth[0:1]| x2 x3) (and (= (+ 1 x0) x2) (and (not (= x2 0)) (and (= (+ 1 x4) x3) (>= x3 1)))))) (|nth[0:1]| x0 x4))))
(assert (forall ((x5 Int)(x6 Int)(x3 Int)(x4 Int)(x1 Int)(var381 Int)(var379 Int)(var380 Int)(x2 Int)(x0 Int)) (=> (and (|nth[0:1]| x5 x6) (and (|nth[0:2][0:0]| var379 var380 x3) (and (|nth[0:2][0:1][0:0]| x1 x2 var381 x4) (and (|nth[0:2][0:1][0:0]| x1 x2 0 x0) (and (|nth[0:1]| x1 x2) (and (= (+ 1 x5) x1) (and (= var381 (+ 1 x3)) (and (not (= x1 0)) (and (= (+ 1 var379) x1) (and (= (+ 1 var380) x2) (and (= (+ 1 x6) x2) (>= x2 1)))))))))))) (|nth[0:2][0:1][0:0]| x5 x6 x3 x4))))
(assert (forall ((x3 Int)(x4 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|nth[0:1]| x3 x4) (and (|make_list[0:1][0:1][0:1][0:0]| x0 x4 x1 x2) (and (|make_list[0:1][0:0]| x0 x4) (and (= x3 0) (>= x4 1))))) (|nth[0:2][0:1][0:0]| x3 x4 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var384 Int)(var386 Int)(var385 Int)) (=> (and (|make_list[0:1][0:1][0:0]| x2 var384 x0) (and (|make_list[0:1][0:0]| var385 var386) (and (|make_list[0:1][0:0]| x2 x3) (and (|make_list[0:0]| x2) (and (= var384 (+ 1 var386)) (and (= x3 (+ 1 var386)) (and (= (+ 1 var385) x2) (and (= x0 0) (and (>= x2 0) (= x1 x2)))))))))) (|make_list[0:1][0:1][0:1][0:0]| x2 x3 x0 x1))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|make_list[0:0]| x2) (and (|nth[0:2][0:0]| 0 x0 x1) (and (|make_list[0:1][0:0]| x2 x0) (>= x0 1)))) (|make_list[0:1][0:1][0:0]| x2 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(var388 Int)(var387 Int)(var389 Int)(var390 Int)) (=> (and (|nth[0:2][0:0]| var387 var388 var389) (and (|nth[0:2][0:1][0:0]| x1 x2 0 var390) (and (|nth[0:1]| x1 x2) (and (<= 1 x2) (and (= (+ 1 var388) x2) (and (= (+ 1 var387) x1) (and (not (= x1 0)) (= x3 (+ 1 var389))))))))) (|nth[0:2][0:0]| x1 x2 x3))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)) (=> (and (|nth[0:1]| x1 x2) (and (= x3 0) (<= 1 x2))) (|nth[0:2][0:0]| x1 x2 x3))))
(assert (forall ((x0 Int)(x4 Int)(x2 Int)(x3 Int)(x1 Int)) (=> (and (|nth[0:2][0:1][0:0]| x2 x3 0 x1) (and (|nth[0:1]| x2 x3) (and (= (+ 1 x0) x2) (and (not (= x2 0)) (and (= (+ 1 x4) x3) (>= x3 1)))))) (|nth[0:1]| x0 x4))))
(assert (forall ((x3 Int)(x4 Int)(x1 Int)(x2 Int)(x0 Int)) (=> (and (|nth[0:1]| x3 x4) (and (|make_list[0:1][0:1][0:1][0:0]| x0 x4 x1 x2) (and (|make_list[0:1][0:0]| x0 x4) (and (= x3 0) (>= x4 1))))) (|nth[0:2][0:1][0:0]| x3 x4 x1 x2))))
(assert (forall ((x2 Int)(x3 Int)(x0 Int)(x1 Int)(var393 Int)(var395 Int)(var394 Int)) (=> (and (|make_list[0:1][0:1][0:0]| x2 var393 x0) (and (|make_list[0:1][0:0]| var394 var395) (and (|make_list[0:1][0:0]| x2 x3) (and (|make_list[0:0]| x2) (and (= var393 (+ 1 var395)) (and (= x3 (+ 1 var395)) (and (= (+ 1 var394) x2) (and (= x0 0) (and (>= x2 0) (= x1 x2)))))))))) (|make_list[0:1][0:1][0:1][0:0]| x2 x3 x0 x1))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|make_list[0:0]| x2) (and (|nth[0:2][0:0]| 0 x0 x1) (and (|make_list[0:1][0:0]| x2 x0) (>= x0 1)))) (|make_list[0:1][0:1][0:0]| x2 x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)) (=> (and (|nth[0:1]| x1 x2) (and (= x3 0) (<= 1 x2))) (|nth[0:2][0:0]| x1 x2 x3))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|make_list[0:1][0:0]| x1 x2) (and (= x0 0) (>= x2 1))) (|nth[0:1]| x0 x2))))
(assert (forall ((x0 Int)(x1 Int)(var397 Int)(var396 Int)) (=> (and (|make_list[0:0]| x0) (and (|make_list[0:1][0:0]| var396 var397) (and (= x1 (+ 1 var397)) (and (>= x0 0) (= (+ 1 var396) x0))))) (|make_list[0:1][0:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[0:0]| x1) (and (= x0 0) (<= (+ 1 x1) 0))) (|make_list[0:1][0:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_list[0:0]| x1) (and (= (+ 1 x0) x1) (>= x1 0))) (|make_list[0:0]| x0))))
(assert (forall ((x0 Int)) (|make_list[0:0]| x0)))
(check-sat)
(get-model)
(exit)
