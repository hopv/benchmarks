(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/nth.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_26[61:0]| ( Int) Bool)
(declare-fun |nth[58:1]| ( Int  Int) Bool)
(declare-fun |make_list[42:1][54:0]| ( Int  Int) Bool)
(declare-fun |make_list[45:1][48:0]| ( Int  Int) Bool)
(declare-fun |make_list[45:0]| ( Int) Bool)
(declare-fun |make_list[42:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_26[61:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|nth[58:1]| x1 x2) (<= x2 0)) (|fail_26[61:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|make_list[42:1][54:0]| x1 x2) (and (= (+ 1 x0) x1) (>= x1 1))) (|nth[58:1]| x0 x2))))
(assert (forall ((x0 Int)(x1 Int)(var110 Int)(var109 Int)) (=> (and (|make_list[42:0]| x0) (and (|make_list[45:1][48:0]| var109 var110) (and (= x1 (+ 1 var110)) (and (>= x0 0) (= (+ 1 var109) x0))))) (|make_list[42:1][54:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[45:0]| x1) (and (= x0 0) (<= (+ 1 x1) 0))) (|make_list[45:1][48:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_list[42:0]| x1) (and (= (+ 1 x0) x1) (>= x1 0))) (|make_list[45:0]| x0))))
(assert (forall ((x0 Int)) (=> (>= x0 1) (|make_list[42:0]| x0))))
(check-sat)
(get-model)
(exit)
