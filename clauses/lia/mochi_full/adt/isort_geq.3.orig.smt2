(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/isort_geq.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_72[195:0]| ( Int) Bool)
(declare-fun |length[169:2][190:0]| ( Int  Int) Bool)
(declare-fun |length[177:2][180:0]| ( Int  Int) Bool)
(declare-fun |length[177:0]| ( Int) Bool)
(declare-fun |length[169:0]| ( Int) Bool)
(declare-fun |length[144:2][165:0]| ( Int  Int) Bool)
(declare-fun |length[152:2][155:0]| ( Int  Int) Bool)
(declare-fun |length[152:0]| ( Int) Bool)
(declare-fun |length[144:0]| ( Int) Bool)
(declare-fun |insertsort[137:2][140:0]| ( Int  Int) Bool)
(declare-fun |insertsort[137:0]| ( Int) Bool)
(declare-fun |make_list[116:1][133:0]| ( Int  Int) Bool)
(declare-fun |make_list[119:1][122:0]| ( Int  Int) Bool)
(declare-fun |make_list[119:0]| ( Int) Bool)
(declare-fun |make_list[116:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_72[195:0]| x0))))
(assert (forall ((x0 Int)(x3 Int)(x5 Int)(x4 Int)(x2 Int)(x1 Int)) (=> (and (|length[169:2][190:0]| x4 x5) (and (|length[144:2][165:0]| x2 x3) (and (|insertsort[137:2][140:0]| x4 x2) (and (|make_list[116:1][133:0]| x1 x4) (<= (+ 1 x3) x5))))) (|fail_72[195:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(var719 Int)(var720 Int)) (=> (and (|length[177:2][180:0]| var719 var720) (and (|length[169:0]| x1) (and (<= 1 x1) (and (= (+ 1 var719) x1) (= x2 (+ 1 var720)))))) (|length[169:2][190:0]| x1 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[177:0]| x1) (and (= x0 0) (<= x1 0))) (|length[177:2][180:0]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[169:0]| x0) (and (= (+ 1 x1) x0) (>= x0 1))) (|length[177:0]| x1))))
(assert (forall ((x2 Int)(x1 Int)(x3 Int)(x0 Int)) (=> (and (|length[144:2][165:0]| x1 x3) (and (|insertsort[137:2][140:0]| x2 x1) (|make_list[116:1][133:0]| x0 x2))) (|length[169:0]| x2))))
(assert (forall ((x1 Int)(x2 Int)(var721 Int)(var722 Int)) (=> (and (|length[152:2][155:0]| var721 var722) (and (|length[144:0]| x1) (and (<= 1 x1) (and (= (+ 1 var721) x1) (= x2 (+ 1 var722)))))) (|length[144:2][165:0]| x1 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[152:0]| x1) (and (= x0 0) (<= x1 0))) (|length[152:2][155:0]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[144:0]| x0) (and (= (+ 1 x1) x0) (>= x0 1))) (|length[152:0]| x1))))
(assert (forall ((x2 Int)(x1 Int)(x0 Int)) (=> (and (|insertsort[137:2][140:0]| x1 x2) (|make_list[116:1][133:0]| x0 x1)) (|length[144:0]| x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|insertsort[137:0]| x1) (and (= x0 0) (<= x1 0))) (|insertsort[137:2][140:0]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (|make_list[116:1][133:0]| x0 x1) (|insertsort[137:0]| x1))))
(assert (forall ((x0 Int)(x1 Int)(var723 Int)(var724 Int)) (=> (and (|make_list[119:1][122:0]| var723 var724) (and (|make_list[116:0]| x0) (and (= (+ 1 var723) x0) (and (= x1 (+ 1 var724)) (not (= x0 0)))))) (|make_list[116:1][133:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[119:0]| x1) (and (= x0 0) (= x1 0))) (|make_list[119:1][122:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_list[116:0]| x1) (and (= (+ 1 x0) x1) (not (= x1 0)))) (|make_list[119:0]| x0))))
(assert (forall ((x0 Int)) (|make_list[116:0]| x0)))
(check-sat)
(get-model)
(exit)
