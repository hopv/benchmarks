(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/nth0.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_27[71:0]| ( Int) Bool)
(declare-fun |nth[68:1]| ( Int  Int) Bool)
(declare-fun |make_list[44:1][56:0]| ( Int  Int) Bool)
(declare-fun |make_list[47:1][50:0]| ( Int  Int) Bool)
(declare-fun |make_list[47:0]| ( Int) Bool)
(declare-fun |make_list[44:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_27[71:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|nth[68:1]| x1 x2) (<= x2 0)) (|fail_27[71:0]| x0))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|make_list[44:1][56:0]| x1 x2) (and (= x0 0) (>= x2 1))) (|nth[68:1]| x0 x2))))
(assert (forall ((x0 Int)(x1 Int)(var122 Int)(var121 Int)) (=> (and (|make_list[44:0]| x0) (and (|make_list[47:1][50:0]| var121 var122) (and (= x1 (+ 1 var122)) (and (>= x0 0) (= (+ 1 var121) x0))))) (|make_list[44:1][56:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[47:0]| x1) (and (= x0 0) (<= (+ 1 x1) 0))) (|make_list[47:1][50:0]| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_list[44:0]| x1) (and (= (+ 1 x0) x1) (>= x1 0))) (|make_list[47:0]| x0))))
(assert (forall ((x0 Int)) (|make_list[44:0]| x0)))
(check-sat)
(get-model)
(exit)
