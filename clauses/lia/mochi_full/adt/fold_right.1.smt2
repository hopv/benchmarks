(set-logic HORN)
(set-info :source |
  Benchmark: test_safe_2019/adt/fold_right.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_28[0:0]| ( Int) Bool)
(declare-fun |fold_right[0:4][0:0]| ( Int  Int  Int) Bool)
(declare-fun |fold_right[0:3]| ( Int  Int) Bool)
(declare-fun |make_list[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |make_list[0:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_28[0:0]| x0))))
(assert (forall ((x0 Int)(x4 Int)(x2 Int)(x3 Int)(x1 Int)) (=> (and (|fold_right[0:4][0:0]| x3 x2 x4) (and (|make_list[0:1][0:0]| x1 x3) (<= (+ 1 x4) x2))) (|fail_28[0:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|fold_right[0:3]| x1 x2) (and (<= x1 0) (= x0 x2))) (|fold_right[0:4][0:0]| x1 x2 x0))))
(assert (forall ((x2 Int)(x1 Int)(x0 Int)) (=> (|make_list[0:1][0:0]| x0 x2) (|fold_right[0:3]| x2 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|make_list[0:0]| x1) (and (= x0 0) (<= (+ 1 x1) 0))) (|make_list[0:1][0:0]| x1 x0))))
(assert (forall ((x0 Int)) (|make_list[0:0]| x0)))
(check-sat)
(get-model)
(exit)
