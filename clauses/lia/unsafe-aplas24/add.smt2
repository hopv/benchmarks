(set-logic HORN)
(declare-fun add (Int Int Int) Bool)
(declare-fun f (Int Int Int) Bool)
(assert (forall ((n Int) (m Int) (r Int))
  (=> (and (<= n 0) (= m r))
    (add n m r))))
(assert (forall ((n Int) (m Int) (r Int))
  (=> (and (> n 0) (add (- n 1) (+ m 1) r))
  (add n m r )
  )))
(assert (forall ((n Int) (r Int) (m Int) (acc Int))
  (=> (and (= n 0) (= r acc))
    (f n acc r))))
(assert (forall ((n Int) (r Int) (m Int)(acc Int)) 
  (=> (and (not(= n 0)) (f (- n 1) m r) (add 2 acc m))
    (f n acc r))))

(assert (forall ((r Int) (n Int))
  (=> (and (= n 1234567) (f n 0 r) ) (< r (* 2 n)))))
(check-sat)
