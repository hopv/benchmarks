(set-logic HORN)
(declare-fun ack (Int Int Int) Bool)
(assert (forall ((m Int) (n Int) (r Int) (r2 Int))
  (=> (and (= m 0) (= (+ n 1) r))
    (ack m n r))))
(assert (forall ((m Int) (n Int) (r Int) (r2 Int))
  (=> (and (not (= m 0)) (= n 0) (ack (- m 1) 1 r))
  (ack m n r)
  )))

(assert (forall ((m Int) (n Int) (r Int) (r2 Int))
  (=> (and (not (= m 0)) (not (= n 0)) (ack m (- n 1) r2) (ack (- m 1) r2 r))
    (ack m n r))))
(assert (forall ((x Int) (y Int) (r Int))
  (=> (and (ack x y r) (= x 2) (= y 2)) (> r 55))))
(check-sat)
